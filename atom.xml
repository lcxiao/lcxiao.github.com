<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lcxiao&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-19T14:49:36.765Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>lcxiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux内核模块及功能</title>
    <link href="http://yoursite.com/2020/06/19/21-Linux%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E5%8F%8A%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2020/06/19/21-Linux%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E5%8F%8A%E5%8A%9F%E8%83%BD/</id>
    <published>2020-06-19T06:49:19.000Z</published>
    <updated>2020-06-19T14:49:36.765Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CentOS启动流程–POST–Bootloader（BIOS，MBR）–kernel-–-rootfs-—switch-root–sbin-init"><a href="#CentOS启动流程–POST–Bootloader（BIOS，MBR）–kernel-–-rootfs-—switch-root–sbin-init" class="headerlink" title="CentOS启动流程–POST–Bootloader（BIOS，MBR）–kernel – rootfs —switch root–sbin/init"></a>CentOS启动流程–POST–Bootloader（BIOS，MBR）–kernel – rootfs —switch root–sbin/init</h2><h2 id="ldd-打印共享依赖库"><a href="#ldd-打印共享依赖库" class="headerlink" title="ldd 打印共享依赖库"></a>ldd 打印共享依赖库</h2><p><code>ldd /bin/ls | grep -o &quot;/lib[^[:space:]]*&quot;</code></p><p>内核设计体系：<br>单内核、微内核<br>linux：单内核设计，但充分借鉴了微内核设计体系的设计有点，为内核引入了模块化机制；</p><h2 id="内核的组成部分："><a href="#内核的组成部分：" class="headerlink" title="内核的组成部分："></a>内核的组成部分：</h2><pre><code>kernel：内核核心，一般为bzimage，通常位于/boot目录、名称为vmlinuz-VERSION-release;kernel object：内核对象，即内核模块、一般防止与/lib/modules/VERSION-release/    内核模块与内核核心版本一定要严格匹配；    [ ]：N    [M]：Module    [*]：Y、编译至内核核心内核模块：动态装载和卸载；</code></pre><p>ramdisk ：辅助性文件，并非必须的，这取决与内核是否能直接驱动rootfs所在的设备；<br>    目标设备驱动，例如SCSI设备的驱动；<br>    逻辑设备驱动，例如LVM设备的驱动<br>    文件系统，例如xfs文件系统；</p><pre><code>ramdisk：是一个简装版的根文件系统；（运行与内存的系统）下一步要做跟切换，持久化</code></pre><h2 id="内核信息获取："><a href="#内核信息获取：" class="headerlink" title="内核信息获取："></a>内核信息获取：</h2><h3 id="uname-：print-system-information"><a href="#uname-：print-system-information" class="headerlink" title="uname ：print system information"></a>uname ：print system information</h3><pre><code>-a ：all-r ：release号，发行号-m ：machine 平台架构-n ：当前主机名</code></pre><p>模块信息获取：</p><h3 id="lsmod"><a href="#lsmod" class="headerlink" title="lsmod"></a>lsmod</h3><p>显示当前系统的</p><h3 id="modinfo"><a href="#modinfo" class="headerlink" title="modinfo"></a>modinfo</h3><p>显示模块详细信息；<br>-F field    ：仅显示指定字段的信息<br>-n 显示文件路径</p><h3 id="modprobe"><a href="#modprobe" class="headerlink" title="modprobe"></a>modprobe</h3><p>实现模块动态装载卸载<br>默认是/etc/modprobe.conf<br>格式:<br><code>modprobe MODULE_NAME</code> 装载模块<br><code>modprobe -r MODULE_NAME</code> ：卸载模块</p><p>不要随便卸载模块，除非你知道自己在做什么；</p><h3 id="depmod"><a href="#depmod" class="headerlink" title="depmod"></a>depmod</h3><p>生成modules.dep和map文件；<br>内核模块依赖关系生成的工具；</p><h3 id="模块的装载和卸载的另一组命令："><a href="#模块的装载和卸载的另一组命令：" class="headerlink" title="模块的装载和卸载的另一组命令："></a>模块的装载和卸载的另一组命令：</h3><p><code>insmode</code><br>    <code>insmode [filename] [module options...]        filename :模块的文件路径</code>rmmode<code></code>rmmod btrfs`<br>    rmmod [-f] [-s] [-v] [modulename]</p><p>ramdisk 文件的管理；</p><ol><li>mkinitrd<ol><li>为使用中的内核重新制作ramfs文件；</li><li>–with=<module>：除了默认的模块之外需要装载至initramfs中的模块</li><li>–preload=<module>:initramfs所提供的模块需要预先装载的模块；</li><li>mkinitrd /boot/initramfs-$(uname -r) $(uname -r)</li></ol></li><li>dracut   较为底层的制作initramfs文件的工具（选项较多，强大）<ol><li>dracut [option…] <image> [<kernel version>]<br>例：<code>dracut initramfs-$(uname -r).img $(uname -r)</code></li></ol></li></ol><h2 id="操作系统上的两个伪文件系统："><a href="#操作系统上的两个伪文件系统：" class="headerlink" title="操作系统上的两个伪文件系统："></a>操作系统上的两个伪文件系统：</h2><p>/proc<br>    内核状态及统计信息的输出接口；同时，还提供了一个配置接口：/proc/sys<br>    参数：<br>        只读；信息输出/proc/#/*<br>        可写：可接受用户指定的一个“新值“来实现对内核某功能和特性的配置；/proc/sys</p><p>/sys    调优就是改这里的参数<br>必须充分理解内核各项参数</p><p>不应该使用文本编辑器命令去编辑<br>而是应该使用重定向的方式去覆盖里面的值</p><ol><li>sysctl ：专用的命令</li></ol><p><code>sysctl net.ipv4.ip_forward</code><br><code>sysctl -w net.ipv4.ip_forward=1</code></p><pre><code>sysctl -a ：显示所有可修改的值；sysctl variable； 对用/proc/sys目录下有对应关系的文件修改其值：    #sysctl -w variable=value   写入    -p ：从指定文件中加载；默认是/etc/sysctl.conf    直接sysctl -p 就可以，必要时可以添加文件路径；</code></pre><ol start="2"><li>文件系统命令<br> 查看：cat /proc/sys/net/ipv4/ip_forward<br> 设定：echo “VALUE” &gt; /proc/sys/net/ipv4/ip_forward</li></ol><p>注意，这两种方式设定的只是当前有效，重启失效<br>要永久有效必须保存至文件/etc/sysctl.conf 、/etc/sysctl.d/*.conf</p><p>内核参数：核心转发/proc/sys/net/ipv4/ip_forward<br>        vm.drop_cache   缓存的内存 （0、1、2）<br>        kernel.hostname 主机名<br>        /proc/sys/net/ipv4/icmp_echo_ignore_all 忽略ping操作</p><p>sysfs ：/sys 目录<br>输出内核识别出的各硬件设备的相关属性信息，也有内核对硬件特性的可设置参数，对此些参数的修改，即可定制硬件设备工作特性；</p><p>udev：通过读取/sys目录下的硬件设备信息，按需为硬件设备创建设备文件；<br>udev 是用户空间程序；正是/sys的存在才能创建设备</p><p>专用工具：<br>devadmin<br>hotplug<br>udev为设备创建设备文件时，会读取事先定义好的规则文件，一般在/etc/udev/rules.d/目录下，以及/usr/lib/udev/rules.d/</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CentOS启动流程–POST–Bootloader（BIOS，MBR）–kernel-–-rootfs-—switch-root–sbin-init&quot;&gt;&lt;a href=&quot;#CentOS启动流程–POST–Bootloader（BIOS，MBR）–kernel-–
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>20.grub系统配置与使用</title>
    <link href="http://yoursite.com/2020/06/15/20-grub%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/06/15/20-grub%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2020-06-15T05:11:21.000Z</published>
    <updated>2020-06-15T13:11:36.006Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GRUB-（Boot-Loader）"><a href="#GRUB-（Boot-Loader）" class="headerlink" title="GRUB （Boot Loader）"></a>GRUB （Boot Loader）</h1><p>grub0.x grub legacy<br>    stage1  MBR<br>    stage1.5    MBR之后的扇区，让stage1中的bootloader能识别stage2所在的分区上的文件系统<br>    stage2  磁盘分区（/boot/grub）</p><pre><code>配置文件：/boot/grub/grub.conf &lt;-- /etc/grub.confstage2及内核通常防止与一个基本磁盘分区；</code></pre><p>功用：</p><ol><li>提供一个菜单、并提供交互式接口<br> e：编辑模式，用于编辑菜单：<br> c：命令模式，交互式接口</li><li>加载用户选择的内核或操作系统<br> 允许传递参数给内核<br> 可隐藏此菜单</li><li>为菜单提供了包含机制<br> 为编辑菜单进行认证<br> 为启用内核或操作系统进行认证</li></ol><h2 id="grep的命令行接口"><a href="#grep的命令行接口" class="headerlink" title="grep的命令行接口"></a>grep的命令行接口</h2><p>help ：获取帮助列表<br>help keyword：详细帮助信息<br>find （hd0，0）/PATH/TO/FILE<br>root （hd#，#）设置为grub的根<br>kernel /PATH/TO/KERNEL_FILE ：设定本次启动时用到的内核文件；<br>initrd /PATH/TO/INITRAMFS_FILE:设定为选定的内核提供额外文件的ramdisk：<br>boot：引导启动选定的内核</p><p>手动在grub命令行接口启动系统：<br>grub&gt;root (hd#,#)<br>grub&gt; kernel /vmlinux—<br>grub&gt; initrd /initramfs—<br>grub&gt; boot</p><p>配置文件/boot/grub/grub.conf<br>    配置项：<br>    default=#：设定默认启动的菜单项：落单项（title）编号从0开始；<br>    timeout=#:指定菜单项等待选项选择的时长；<br>    splashimage=（hd#，#）/PATH/TO/XPM_PIC_FILE ：指明菜单背景图片的文件路径；<br>    hideenmenu：隐藏菜单<br>    title TITLE：定义菜单项”标题“，可出现多次，引导多个不同的内核<br>    root（hd#，#） ：grub查找stage2及kernel文件所在设备分区：为grub的根；<br>    kernel /PATH/TO/VMLINUZ_FILE :启动的内核<br>    initrd /PATH/TO/initramfs :内核匹配的ramfs文件；<br>    password [–md5] STRING :启动选定的内核或操作系统时进行认证；</p><p>grub-md5-crypt 命令<br>输入两次密码后生成一个加密字符串，拷贝至grub配置文件中；</p><p>进入单用户模式：</p><ul><li>编辑grub菜单（选定要编辑的title，而后使用e命令）；</li><li>在选定的kernrl后附加<ul><li>1，s，S或single都可以</li></ul></li><li>在kernel所在行，键入b命令；</li></ul><h2 id="安装grub："><a href="#安装grub：" class="headerlink" title="安装grub："></a>安装grub：</h2><p>在运行正常的系统<br>grub-install 命令：<br>可以安装到任意磁盘</p><p>例如：挂载另一块磁盘来做启动，</p><ul><li>为磁盘分区，设置boot分区 /dev/sdb1 根分区/dev/sdb2</li><li>挂载分区 mount /dev/sdb1 /mnt/boot   – mount /dev/sdb2 /mnt/sysroot</li><li>grub install –root-directory=/mnt /dev/sdb<ul><li>在/mnt/boot目录拷贝vmlinuz和initramfs.img文件作为启动内核；</li><li>编辑grub配置文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">default=0</span><br><span class="line">timeout=5</span><br><span class="line">title CentOS(<span class="built_in">test</span>)</span><br><span class="line">      root (hd0,0)</span><br><span class="line">      kernel /vmlinuz ro root=/dev/sda1 </span><br><span class="line">      initrd /initramfs.img</span><br></pre></td></tr></table></figure></li></ul></li><li>在/mnt/sysroot文件夹下建立FHS标准文件夹，作为根问价您系统，拷贝bash程序和动态依赖库文件到相同目录<ul><li>mkdir -pv bin sbin mnt home usr lib lib64 proc etc media root …</li><li>cp /bin/bash /mnt/sysroot/bin</li><li>ldd /bin/bash</li><li>cp *.so /mnt/sysroot</li><li>chroot /mnt/sysroot<br>grub配置文件中 kernerl /vmlinuz ro root=/dev/sda1 (selinux=0) init=/bin/bash</li></ul></li></ul><p>有点类似于ARClinux安装的流程；</p><h2 id="手动修复损坏的grub：-本机的grub"><a href="#手动修复损坏的grub：-本机的grub" class="headerlink" title="手动修复损坏的grub：(本机的grub)"></a>手动修复损坏的grub：(本机的grub)</h2><ul><li><p>grub-install –root-directory=/ /dev/sda</p><ul><li>–root-directory=（boot目录的父目录）</li></ul></li><li><p>grub命令提示符下安装（要求有boot目录，且存在stage1，stage1.5文件）<br>  grub&gt; root (hd0,0)<br>  grub&gt; setup （hd0）<br>  grub&gt; exit</p></li><li><p>进入系统安装光盘，进入救援模式：</p><ul><li>Rescue installed system</li><li>或者ESC键输入linux rescue （类似winPE）</li><li>–&gt;continue–&gt;挂载在/mnt/sysimage–&gt;shell(start shell)</li><li>chroot /mnt/sysroot</li><li>在命令提示符下grub-install</li><li>exit –&gt; reboot</li></ul></li></ul><p>练习：</p><ol><li>添加硬盘，提供直接单独运行bash系统</li><li>破坏本机grub stage1，而后在救援模式下修复之；</li><li>为grub设备保护功能；</li></ol><p>grub的保护password<br>grub-crypt –sha-256        –&gt;        grub-crypt<br>grub-crypt –md5            –&gt;        grub-md5-crypt<br>/etc/grub.conf文件增加下面这一行，则启动时如果需要编辑grub选项需要先按P键输入密码<br>password –encrypted ^9^32kwzzX./3WISQ0C</p><p>如果在特定title下添加<br>password –encrypted STRING 则选择引导这个内核或者系统时需要先认证；</p><p>如：</p><p>grub-md5-crypt</p><p>password –md5 STRING</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">default=0</span><br><span class="line">timeout=5</span><br><span class="line">splashimage=(hd0,0)/grub/splash.xpm.gz</span><br><span class="line">hiddenmenu</span><br><span class="line">password --md5 <span class="variable">$1</span><span class="variable">$OOmpy0</span><span class="variable">$wue</span>.j4urx8NNf6wfQZkmF/<span class="comment">#密码的MD5加密形式</span></span><br><span class="line">title CentOS (2.6.32-754.27.1.el6.x86_64)</span><br><span class="line">        root (hd0,0)</span><br><span class="line">        kernel /vmlinuz-2.6.32-754.27.1.el6.x86_64 ro root=/dev/mapper/VolGroup-lv_root rd_NO_LUKS LANG=en_US.UTF-8 rd_NO_MD rd_LVM_LV=VolGroup/lv_swap SYSFONT=latarcyrheb-sun16 crashkernel=auto rd_LVM_LV=VolGroup/lv_root  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</span><br><span class="line">        initrd /initramfs-2.6.32-754.27.1.el6.x86_64.img</span><br><span class="line">title CentOS 6 (2.6.32-754.el6.x86_64)</span><br><span class="line">        lock<span class="comment">#保护开启</span></span><br><span class="line">        root (hd0,0)</span><br><span class="line">        kernel /vmlinuz-2.6.32-754.el6.x86_64 ro root=/dev/mapper/VolGroup-lv_root rd_NO_LUKS LANG=en_US.UTF-8 rd_NO_MD rd_LVM_LV=VolGroup/lv_swap SYSFONT=latarcyrheb-sun16 crashkernel=auto rd_LVM_LV=VolGroup/lv_root  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</span><br><span class="line">        initrd /initramfs-2.6.32-754.el6.x86_64.img</span><br></pre></td></tr></table></figure><p>grub-crypt</p><p>password –sha-256 STRING</p><p>在title后面root上一行可以给要保护的启动项添加lock字段，则自动时必须按p键输入密码才能启动；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># (0) Arch Linux</span><br><span class="line">title  Arch Linux</span><br><span class="line">lock</span><br><span class="line">root   (hd0,1)</span><br><span class="line">kernel &#x2F;boot&#x2F;vmlinuz-linux root&#x3D;&#x2F;dev&#x2F;disk&#x2F;by-label&#x2F;Arch_Linux ro</span><br><span class="line">initrd &#x2F;boot&#x2F;initramfs-linux.img</span><br></pre></td></tr></table></figure><p>如果boot分区单独分区的话，此分区就是grub的根分区；<br>/vmlinuz<br>/grub/grub.conf</p><p>如果没有单独分区的话，<br>这个分区是根，那么vmlinuz文件就是在/boot/vmlinuz<br>/boot/grub/grub.conf</p><p>grub访问的一般为基本磁盘分区<br>单独分区是因为根文件系统比较复杂；</p><p>如何识别设备：<br>hd#，#      两个数字的含义：第几块磁盘，第几个分区；<br>（hd0，0） 第一个磁盘的第一个主分区；</p><p>grub1.x grub2</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;GRUB-（Boot-Loader）&quot;&gt;&lt;a href=&quot;#GRUB-（Boot-Loader）&quot; class=&quot;headerlink&quot; title=&quot;GRUB （Boot Loader）&quot;&gt;&lt;/a&gt;GRUB （Boot Loader）&lt;/h1&gt;&lt;p&gt;grub0.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>19.Linux系统启动流程</title>
    <link href="http://yoursite.com/2020/06/15/19-Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/06/15/19-Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</id>
    <published>2020-06-15T05:10:58.000Z</published>
    <updated>2020-06-15T13:11:12.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="系统启动流程"><a href="#系统启动流程" class="headerlink" title="系统启动流程"></a>系统启动流程</h1><p>Linux系统组成部分：内核，根文件系统<br>内核：进程管理，内存管理、网络协议栈、文件系统、驱动程序、安全功能（加密解密协议栈。selinux）<br>    IPC：Inter Process Communication<br>    消息队列、semerphor、shm<br>    socket<br>文件系统工作在内核空间</p><p>启动分区：/boot<br>rootfs：FHS：/bin /sbin /lib /proc /sys /etc<br>init 程序–</p><p>内核设计流派：</p><ul><li>单内核 ：所有功能集成与同一个程序；<ul><li>Linux</li></ul></li><li>微内核 ：每种功能使用一个单独的子系统实现；<ul><li>Windows，Solaris</li></ul></li></ul><p>Linux内核特点：</p><ul><li>支持模块化    .ko（Kernel Object）</li><li>支持模块运行时动态装载或卸载；</li><li>ramdisk 使用缓存和缓冲来加速对磁盘上的文件访问；</li></ul><p>Linux内核组成部分：</p><ul><li>核心文件  /boot/vmlinuz-VERSION-release</li><li>模块文件  /lib/modules/VERSION-release</li></ul><p>vmlinux —-&gt; ramdisk —-&gt; rootfs<br>内核    –  临时根文件系统  –  切换真正的根文件系统<br>ramdisk：<br>centos5 /boot/initrd-VERSION-release.img<br>CentOS6,7: /boot/initramfs-VERSION-release.img</p><p>模块文件：/lib/modules/VERSION-release </p><p>PC架构的主机系统启动流程，（MBR）：<br>POST：rom（只读）CMOS –BIOS–basic input output system<br>ROM + RAM<br>加电自检<br>Boot Sequence：启动次序,按次序查找各引导设备；第一个有引导程序的设备即为本次启动要用到的设备；<br>bootloader：引导加载器，程序；<br>    windows：ntloader<br>    linux：<br>        LILO：Linux loader<br>        grub ：grand uniform BootLoader<br>        grub0.X grub legacy<br>        grub1.x grub2<br>功能：提供一个界面，允许用户选择要启动的系统或者不同版本的内核，把用户选定的内核装载到RAM中的特定空间中，解压、展开而后把系统控制权移交给内核；</p><p>MBR：Master Boot Record<br>    512bytes:<br>        446bytes:bootloader<br>        64bits:fat<br>        2bytes:55AA<br>GRUB:<br>    Bootloader:1st stage<br>    partition :filesystem driver ,1.5 stage<br>    partition : /boot/grub 2nd stage</p><p>之后是kernel：<br>    自身初始化：<br>        探测可识别到的所有硬件设备<br>        加载硬件驱动程序；（有可能会借助于ramdisk加载驱动）<br>        以只读方式挂载根文件系统；<br>        运行用户空间的第一个程序；INIT?<br>    ramdisk 动态创建；</p><p>INIT文件类型:<br>SYSV,Upstart,Systemd<br>    CentOS5:SysV init 配置文件/etc/inittab<br>    CentOS6: Upstart /etc/inittab   /etc/init/*.conf<br>    CentOS7:Systemd 配置文件：/usr/lib/systemd/system/,/etc/systemd/system<br>注意GPT、UEFI可能不一样？</p><p>安卓手机使用lilo引导</p><p>对自己编译的内核来说，ramdisk可以是非必须的，（直接把硬盘驱动编译至内核）<br>可以使用工具创建：<br>CentOS5：mkinitrd<br>centos6，7<br>initramfs 工具程序<br>dracut ，mkinitrd</p><p>系统初始化流程（内核级别）：POST–BootSequence（BIOS）–BootLoader（MBR）–kernel(ramdisk)–rootfs(readonly)–/sbin/init?</p><p>sbin/init:<br>SysV init:<br>运行级别 （0-6）</p><ul><li>0 ：关机</li><li>1 单用户级别  root 无需认证 ；维护模式</li><li>2 带网络的单用户  启动网络功能，不会启动NFS，维护模式</li><li>3 multiuser mode 多用户。完全认证，完整模式</li><li>4 预留，未用</li><li>5 graphic mode 图形界面</li><li>6 重启</li></ul><p>默认3 5<br>级别切换 init #<br>级别查看：<br>who -r<br>runlevel</p><p>配置文件： /etc/inittab</p><p>CentOS5：每行定义一种action以及与之对应的process<br>id：runlevels：action：process<br>    id：一个任务的标识符<br>    runleves：在哪些级别启动此任务；#，###，也可以为空，表示所有级别；<br>    action：在什么条件下启动此任务；<br>    process：任务；</p><p>action：<br>    wait：等待切换至此任务所在的级别时执行一次；<br>    respawn：一旦此任务终止，就自动重新启动之；<br>    initdefault：设定默认运行级别；此时，process省略；<br>    sysinit：设定系统初始化方式，此处一般为指定/etc/rc.d/ec.sysinit脚本；</p><p>例如：<br>id：3:initdefault:<br>si::sysinit:/etc/rc.d/ec.sysinit<br>l0:0:wait:/etc/rc.d/rc 0<br>    意味着去启动或关闭/etc/rc.d/rc3.d/目录下的服务脚本所控制服务；<br>    K* ：要停止的服务；K##<em>，优先级，数字越小，越是优先关闭；依赖的服务先关闭；而后关闭被依赖的；<br>    S</em>：要启动的服务；S##*，优先级，数字越小，越是优先启动，被依赖的服务先启动，而依赖的服务后启动；</p><p>rc脚本：接受一个运行级别数字为参数；<br>脚本框架:<br>for srv in /etc/rc.d/rc#.d/K*;do<br>    $srv stop<br>done</p><p>for srv in /etc/rc.d/rc#.d/S*;do<br>    $srv start<br>done</p><p>/etc/init.d/* 脚本执行方式：<br>service SRV_SCRIPT {start | stop | status |restart}<br>/etc/init.d/SRV_SCRIPT {start | stop |status |restart}</p><p>Chkconfig 管理这些脚本软连接的<br>管控/etc/init.d /每个服务脚本在各级别下的启动和关闭状态；</p><p>chkconfig SERVICE on | off<br>脚本文件中 “-” 表示 所有级别全关<br>chkconfig –list</p><p>刚添加的脚本还没有创建链接？<br>chkconfig –add<br>chkconfig –del</p><p>#chkconfig：LLL NN NN   LLL：运行级别。NN：开启优先级 NN：关闭优先级<br>#description：说明</p><p>修改指定的链接类型<br>chkconfig {–level LEVELS} name 《on | off | reset》<br>默认2345</p><p>正常级别下，最后一个启动的服务S99local没有链接至/etc/init.d下的某脚本，而是链接到了/etc/rc.d/rc.local脚本；因此，不方便或者不需写服务脚本的程序期望开机自动运行时，直接放置于此脚本文件中即可；</p><p>rc.local<br>用户自定义开机运行的程序</p><p>tty1：:2345：respawn：/usr/sbin/mingetty tty1<br>mingetty会调用login，<br>打开虚拟终端的程序除了mingetty之外，还有诸如getty等；</p><p>系统初始化脚本 /etc/rc.d/rc.sysinit</p><ul><li>设置主机名</li><li>设置欢迎信息</li><li>激活udev和selinux （udev主要是创建设备文件）</li><li>挂载/etc/fstab文件中定义的所有文件系统；</li><li>检测根文件系统，并以读写方式重新挂载根文件系统；</li><li>设置系统时钟</li><li>根据/etc/sysctl.conf文件来设置内核参数</li><li>激活LVM及软RAID设备</li><li>激活swap设备；</li><li>加载额外需要的驱动程序；</li><li>清理操作</li></ul><p>总结（用户空间的启动流程）：/sbin/init (etc/inittab)<br>设置默认运行级别 –&gt; 运行系统初始化脚本 ，完成系统初始化 –&gt; 关闭对应级别下要停止的服务，启动对应级别下需要开启的服务 –&gt; 设置登录终端 –&gt; 【启动图形终端】（可选）；</p><p>通读/etc/rc.d/rc.sysinit 文件；搞清楚每一步做了什么？</p><p>CentOS6：<br>init程序：upstart，但依然为/sbin/init（/etc/inittab）<br>/etc/init/*.conf /etc/inittab （仅用于定义默认运行级别）</p><p>注意：*.conf 为upstart风格的配置文件；</p><p>rcS.conf<br>init-system-dbus.conf<br>start-ttys.conf</p><p>CentOS7: Systemd,配置文件：/usr/lib/systemd/system/* , /etc/systemd/system/*</p><p>systemctl get-default<br>systemctl set-default multi-user.target</p><p>systemctl status<br>完全兼容SysV脚本机制；因此，service命令依然可用，但是，建议使用systemctl命令来控制服务</p><p>systemctl {status | start | stop | restart | reload} SERVICE</p><p>CentOS系统启动流程；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;系统启动流程&quot;&gt;&lt;a href=&quot;#系统启动流程&quot; class=&quot;headerlink&quot; title=&quot;系统启动流程&quot;&gt;&lt;/a&gt;系统启动流程&lt;/h1&gt;&lt;p&gt;Linux系统组成部分：内核，根文件系统&lt;br&gt;内核：进程管理，内存管理、网络协议栈、文件系统、驱动程序、安
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>18.SHELL循环</title>
    <link href="http://yoursite.com/2020/06/15/18-SHELL%E5%BE%AA%E7%8E%AF/"/>
    <id>http://yoursite.com/2020/06/15/18-SHELL%E5%BE%AA%E7%8E%AF/</id>
    <published>2020-06-15T05:10:33.000Z</published>
    <updated>2020-06-15T13:10:46.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BASH编程"><a href="#BASH编程" class="headerlink" title="BASH编程"></a>BASH编程</h1><p>顺序执行<br>选择执行    if，case<br>循环执行    for，while，until</p><h2 id="for循环格式："><a href="#for循环格式：" class="headerlink" title="for循环格式："></a>for循环格式：</h2><p>for VARAIBLE in LIST；do<br>    循环体<br>done</p><h2 id="while循环："><a href="#while循环：" class="headerlink" title="while循环："></a>while循环：</h2><p>while CONDITION；do<br>    循环体<br>    循环控制变量修正表达式<br>done</p><p>进入条件：CONDITION测试为真<br>退出条件：CONDITION测试为假</p><h2 id="until循环：（相当于while测试条件加！号）"><a href="#until循环：（相当于while测试条件加！号）" class="headerlink" title="until循环：（相当于while测试条件加！号）"></a>until循环：（相当于while测试条件加！号）</h2><p>until CONDITION；do<br>    循环体<br>    循环控制变量修正表达式<br>done<br>进入条件：CONDITION测试为假<br>退出条件：CONDITION测试为真</p><h2 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h2><p>1.求100内偶数之和、100以内奇数之和<br>2、创建10个用户。user101-user110；密码同用户<br>3、打印99乘法表<br>4、打印逆序九九乘法表</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;BASH编程&quot;&gt;&lt;a href=&quot;#BASH编程&quot; class=&quot;headerlink&quot; title=&quot;BASH编程&quot;&gt;&lt;/a&gt;BASH编程&lt;/h1&gt;&lt;p&gt;顺序执行&lt;br&gt;选择执行    if，case&lt;br&gt;循环执行    for，while，until&lt;/p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>17.网络客户端工具</title>
    <link href="http://yoursite.com/2020/06/15/17-%E7%BD%91%E7%BB%9C%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2020/06/15/17-%E7%BD%91%E7%BB%9C%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%B7%A5%E5%85%B7/</id>
    <published>2020-06-15T05:09:56.000Z</published>
    <updated>2020-06-15T13:10:11.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络客户端工具"><a href="#网络客户端工具" class="headerlink" title="网络客户端工具"></a>网络客户端工具</h1><p>ping、lftp、lftpget、wget等</p><h2 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h2><p>ICMP：<br>    echo request 8<br>    echo reply 0<br>ping 发出echo request命令，返回echo reply；</p><p>ping [option] DESTINATION<br>    -c #：包个数<br>    -I ：接口<br>    -w ：deadline ping命令超时时长；<br>    -W ：一次ping操作中，<br>    -s ：指定包的大小</p><h2 id="hping-："><a href="#hping-：" class="headerlink" title="hping ："></a>hping ：</h2><pre><code>--flood 尽可能的快的发包，压力测试?--fast  快--faster    比快更快-i uX</code></pre><h2 id="traceroute："><a href="#traceroute：" class="headerlink" title="traceroute："></a>traceroute：</h2><p>跟踪从源主机到目标主机之间经过的网关；</p><h2 id="ftp命令"><a href="#ftp命令" class="headerlink" title="ftp命令"></a>ftp命令</h2><p>文件传输协议：<br>put ：上传<br>status：状态<br>bye：退出</p><h2 id="lftp命令："><a href="#lftp命令：" class="headerlink" title="lftp命令："></a>lftp命令：</h2><p>取代ftp的命令<br>-p port<br>-u user[,pass]</p><p>get mget<br>put mput<br>rm</p><h2 id="lftpget"><a href="#lftpget" class="headerlink" title="lftpget"></a>lftpget</h2><p>-c ：继续之前的下载</p><h2 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h2><p>非交互式的资源下载器：<br>功能强大<br>wget [option]… [URL]…<br>-b：后台下载<br>-q |–quiet 静默下载（不显示下载进度）<br>-O file ：指明下载文件名<br>-c | –continue ：断点续传<br>–progress=type bar（default） dot 进度条格式<br>–limit-rate=amount ：以指定速率下载文件（–limit-rate=20k）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;网络客户端工具&quot;&gt;&lt;a href=&quot;#网络客户端工具&quot; class=&quot;headerlink&quot; title=&quot;网络客户端工具&quot;&gt;&lt;/a&gt;网络客户端工具&lt;/h1&gt;&lt;p&gt;ping、lftp、lftpget、wget等&lt;/p&gt;
&lt;h2 id=&quot;ping命令&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>16.进程和作业管理</title>
    <link href="http://yoursite.com/2020/06/15/16-%E8%BF%9B%E7%A8%8B%E5%92%8C%E4%BD%9C%E4%B8%9A%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/06/15/16-%E8%BF%9B%E7%A8%8B%E5%92%8C%E4%BD%9C%E4%B8%9A%E7%AE%A1%E7%90%86/</id>
    <published>2020-06-15T05:09:30.000Z</published>
    <updated>2020-06-15T13:09:47.164Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux系统作业控制："><a href="#Linux系统作业控制：" class="headerlink" title="Linux系统作业控制："></a>Linux系统作业控制：</h1><h2 id="Job："><a href="#Job：" class="headerlink" title="Job："></a>Job：</h2><pre><code>前台作业（foregroud）：通过终端启动，且启动后会一直占据终端；后台作业（background）：可以通过终端启动，但启动后即转入后台运行（释放终端）；命令行中启动的命令，如果不支持运行在后台的话，会一直占据前台；</code></pre><h3 id="如何让作业运行于后台"><a href="#如何让作业运行于后台" class="headerlink" title="如何让作业运行于后台"></a>如何让作业运行于后台</h3><pre><code>* 运行中的作业  * Ctrl+Z  * 注意：送往后台后，作业转为静止态；* 尚未启动的作业  * COMMAAD &amp;注意：此类作业虽然被送往后台，单其依然与终端相关；如果希望把送网后台的作业剥离与终端的关系：    nohup command &amp;</code></pre><h3 id="可实现作业控制的常用命令"><a href="#可实现作业控制的常用命令" class="headerlink" title="可实现作业控制的常用命令"></a>可实现作业控制的常用命令</h3><p>fg  把指定作业调回前台；注意，直接加上jobs显示的id即可，后面的+号表示默认fg转入的作业，即优先级；<br>bg  让送往后台的作业在后台继续运行；<br>kill    终止指定的作业；注意一定要加“%”号；</p><h2 id="调整进程优先级"><a href="#调整进程优先级" class="headerlink" title="调整进程优先级"></a>调整进程优先级</h2><p>可通过nice值调整的优先级范围：100–139<br>    分别对应于：-20 19<br>进程启动时，其nice值默认为0，其优先级是120；</p><h3 id="nice命令"><a href="#nice命令" class="headerlink" title="nice命令:"></a>nice命令:</h3><p>以指定的nice值启动并运行命令<br>nice [option] [command [ARGU]…]<br>nice -n NICE<br>注意：仅管理员可以调低nice值；</p><h3 id="renice命令："><a href="#renice命令：" class="headerlink" title="renice命令："></a>renice命令：</h3><pre><code>renice [-n] NICE PID...</code></pre><p>查看NICE值和优先级：<br>    ps axo pid,ni,priority,comm</p><h3 id="未涉及的命令："><a href="#未涉及的命令：" class="headerlink" title="未涉及的命令："></a>未涉及的命令：</h3><p>sar、tsar、iostat、lftop、nethog…</p><h3 id="htop、dstat、top、ps命令的使用重点掌握；"><a href="#htop、dstat、top、ps命令的使用重点掌握；" class="headerlink" title="htop、dstat、top、ps命令的使用重点掌握；"></a>htop、dstat、top、ps命令的使用重点掌握；</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux系统作业控制：&quot;&gt;&lt;a href=&quot;#Linux系统作业控制：&quot; class=&quot;headerlink&quot; title=&quot;Linux系统作业控制：&quot;&gt;&lt;/a&gt;Linux系统作业控制：&lt;/h1&gt;&lt;h2 id=&quot;Job：&quot;&gt;&lt;a href=&quot;#Job：&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>15.Linux进程管理命令</title>
    <link href="http://yoursite.com/2020/06/15/15-Linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/06/15/15-Linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/</id>
    <published>2020-06-15T05:09:04.000Z</published>
    <updated>2020-06-15T13:09:20.742Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h2><p>read（），open（），write（）；</p><p>程序开发成内部多个执行流，每个执行流可单独运行与一个cpu核心上<br>多线程运行编程模型；<br>并行计算；<br>必须拥有多核心才可以；</p><p>每个进程分配固定的线程，每个线程实现一个连接；<br>linux线程即进程；</p><h2 id="随时鉴定服务器的各种状态；"><a href="#随时鉴定服务器的各种状态；" class="headerlink" title="随时鉴定服务器的各种状态；"></a>随时鉴定服务器的各种状态；</h2><p>cpu、内存、进程<br>垃圾回收策略，<br>运维基本能力；</p><p>管理进程的运行数量，占用资源，优先级如何；</p><h2 id="进程管理命令"><a href="#进程管理命令" class="headerlink" title="进程管理命令"></a>进程管理命令</h2><p>客户访问慢。全方位去诊断，查看，网络，磁盘，程序bug；（了解程序运行法则）不背锅；</p><p>Linux系统上的进程查看及管理工具：<br>pstree、ps、pidof、pgrep、top、htop、glances、pmap、vmstat、dstat、kill、pkill、job、bg、fg、nohup、nice、renice、killall…</p><p>CentOS5：SYSV init；<br>CentOS6：UPstart（并行启动）dbus通信<br>CentOS7：Systemd：（红帽的程序员参考MacOS开发）（开关机都非常快）</p><h2 id="pstree：查看进程树；"><a href="#pstree：查看进程树；" class="headerlink" title="pstree：查看进程树；"></a>pstree：查看进程树；</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">init-+-getty</span><br><span class="line">     |-getty</span><br><span class="line">     |-getty</span><br><span class="line">     `-getty</span><br></pre></td></tr></table></figure><p>Systemd:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">systemd─┬─VGAuthService</span><br><span class="line">        ├─atd</span><br><span class="line">        ├─auditd───&#123;auditd&#125;</span><br><span class="line">        ├─crond</span><br><span class="line">        ├─dbus-daemon───&#123;dbus-daemon&#125;</span><br><span class="line">        ├─login───bash</span><br><span class="line">        ├─lvmetad</span><br><span class="line">        ├─master─┬─pickup</span><br><span class="line">        │        └─qmgr</span><br><span class="line">        ├─mysqld_safe───mysqld───18*[&#123;mysqld&#125;]</span><br><span class="line">        ├─polkitd───6*[&#123;polkitd&#125;]</span><br><span class="line">        ├─rsyslogd───2*[&#123;rsyslogd&#125;]</span><br><span class="line">        ├─sshd───sshd───bash───pstree</span><br><span class="line">        ├─systemd-journal</span><br><span class="line">        ├─systemd-logind</span><br><span class="line">        ├─systemd-udevd</span><br><span class="line">        ├─tuned───4*[&#123;tuned&#125;]</span><br><span class="line">        └─vmtoolsd───&#123;vmtoolsd&#125;</span><br></pre></td></tr></table></figure><h2 id="PS："><a href="#PS：" class="headerlink" title="PS："></a>PS：</h2><p>/proc   内核中的状态信息：<br>    内核参数：<br>        可设置其值从而调整内核运行特性的参数:/proc/sys<br>        状态变量：其用于输出内核中统计信息和状态信息，仅用于查看；</p><pre><code>参数，模拟成文件系统类型；proc中数字目录为进程号：进程：    /proc/#        #:PID</code></pre><h2 id="ps：-report-a-snapshot-of-the-current-processes"><a href="#ps：-report-a-snapshot-of-the-current-processes" class="headerlink" title="ps： report a snapshot of the current processes."></a>ps： report a snapshot of the current processes.</h2><p>取当前命令执行这一刻的状态；<br>三种风格：</p><p>1   UNIX options, which may be grouped and must be preceded by a dash.<br>2   BSD options, which may be grouped and must not be used with a dash.<br>3   GNU long options, which are preceded by two dashes.</p><p>1:带一个“-“<br>2:带两个“-”<br>3：长选项“–”</p><p>启动进程的方式：<br>    系统启动过程中自动启动；与终端无关的进程；<br>    用户通过终端启动：与终端相关的进程；</p><pre><code>a：所有与终端相关的进程x：所有与终端无关的进程    []内核线程u：以用户为中心组织进程状态信息显示；    VSZ ：虚拟内存级，占用的虚拟内存大小（非swap）；    RSS ：常驻内存级；（不能放交换分区的数据）；    STAT ：当前进程的运行状态：BSD风格；R:running S:interruptable sleeping D :uninter... T :stopped Z:zombie    带+ 号表示前台进程，    l ：多线程进程    N ：高优先级    &lt; ：高优先级    s ：session leader-e ：Unix风格：显示所有进程；-f ：full format 完整格式的常用组合2： ps -ef-F ：显示完整格式的进程信息    C：cpu utilization CPU占用    PSR：运行于哪颗cpu上；-H ：以层级结构显示进程的相关信息；常用组合之三：-eFH常用组合之四：-eo : 自定义要显示的字段；以逗号分割了；axo ：field1，field2.。。常见的field，pid、nl、prl、psr、pcpu、stat、comm、tty、ppid；    nl：nice值    priority：优先级；    rtprio：实时优先级；</code></pre><h2 id="pgrep、pkill命令："><a href="#pgrep、pkill命令：" class="headerlink" title="pgrep、pkill命令："></a>pgrep、pkill命令：</h2><p>进程过滤    关闭进程<br>pgrep<br>-u ：uid user；<br>-U ：UID read user；<br>-t terminal ：与指定的终端相关的进程；<br>-l ：显示进程名；<br>-a ：显示完整格式的进程名；<br>-p pid ：显示此进程的子进程；</p><h2 id="pidof命令"><a href="#pidof命令" class="headerlink" title="pidof命令"></a>pidof命令</h2><p>根据进程名，取其pid</p><h2 id="top命令："><a href="#top命令：" class="headerlink" title="top命令："></a>top命令：</h2><p>uptime命令：显示系统时间、运行时长以及平均负载<br>top第一行显示的就是此信息；</p><p>PID 用户    优先级  nice值  虚拟内存级  常驻内存级  共享内存级  运行状态    CPU百分比   内存百分比  运行时长</p><p>排序<br>P   :以占据cpu百分比排序<br>M   ：以占据内存百分比<br>T   ：累计占用cpu时间排序</p><p>首部信息：<br>    uptime信息：l命令<br>    task及cpu信息：t命令<br>    内存信息：m命令</p><p>退出：q<br>修改刷新：s<br>终止指定的进程：k</p><p>选项：<br>-d #：刷新时间间隔，默认3s<br>-b ：批次方式显示；<br>-n #：显示多少批次；</p><h2 id="HTOP"><a href="#HTOP" class="headerlink" title="HTOP"></a>HTOP</h2><pre><code>-d # ：指定延迟时间间隔；-u USer Name ：仅显示指定用户的进程-s colume：以指定字段进行排序</code></pre><p>子命令：<br>    l：显示进程所打开的所有文件；<br>    s：跟踪选定的进程的系统调用<br>    t：以层级关系显示各进程状态<br>    a：将选定的进程绑定至某个cpu核心上；</p><h2 id="vmstat：报告虚拟内存的使用情况："><a href="#vmstat：报告虚拟内存的使用情况：" class="headerlink" title="vmstat：报告虚拟内存的使用情况："></a>vmstat：报告虚拟内存的使用情况：</h2><p>procs：<br>    r:等待运行的进程的个数；cpu上等待运行的任务的队列长度；<br>    b：处于不可中断睡眠态的进程个数；被阻塞的任务队列的长度；<br>memory：<br>    swpd ：交换内存使用总量；<br>    free ：空闲的物理内存总量<br>    buff ：用于buffee的内存总量<br>    cache :用于cache的内存总量<br>swap：<br>    si : 数据进入swap的速率：单位是（kb/s）<br>    so ：数据离开swap的速率，（kb/s）<br>io：<br>    bi ：从块设备读入数据到系统的速率（kb/s）<br>    bo ：保存数据到块设备的速率（kb/s）<br>system：<br>    in ：中断速率<br>    cs ：上下文切换的速率</p><p>cpu ：<br>    us ：用户空间的程序所占用cpu的百分比<br>    sy ：system<br>    id ：idle<br>    wa ：wait<br>    st ：被虚拟化技术偷走的</p><p>选项：<br>    -s ：显示内存统计信息；</p><h2 id="pmap"><a href="#pmap" class="headerlink" title="pmap"></a>pmap</h2><p>pmap [options] pid […]</p><p>pmap -x 1<br>    -x :显示详细格式的信息；<br>    另一种查看的方式<br>    cat /proc/PID/maps</p><h2 id="glances-命令："><a href="#glances-命令：" class="headerlink" title="glances 命令："></a>glances 命令：</h2><p>常见选项：<br>    -b ：以Byte为单位显示网卡数据速率；<br>    -d ：关闭磁盘I/O模块<br>    -m ：关闭mount模块<br>    -n ：关闭network模块<br>    -t # ：刷新时间间隔<br>    -1 ：每个cpu的相关数据单独显示；<br>    -o ：指定输出格式；</p><h2 id="Dstat"><a href="#Dstat" class="headerlink" title="Dstat:"></a>Dstat:</h2><p>强大的实时系统信息显示：<br>    -c –cpu        CPU相关<br>        -C total<br>    -d –disk       磁盘相关<br>        -D sda sdb total<br>    -g 显示page相关的统计数据<br>    -m 内存相关<br>    -n 网络<br>    -p 进程相关统计<br>    -r IO<br>    -s swap<br>    –tcp 显示tcp<br>    –udp<br>    –raw<br>    –socket</p><pre><code>--ipc   进程间通信--top-cpu 最占用cpu的进程--top-io --top-memory--top-lantency 延迟最大的进程</code></pre><h2 id="kill-命令：-terminate-a-process"><a href="#kill-命令：-terminate-a-process" class="headerlink" title="kill 命令： terminate a process"></a>kill 命令： terminate a process</h2><p>用于向进程发送信号，以实现对进程的管理；</p><p>kill -l 显示系统当前的信号列表<br>每个信号的标识方法有三种：<br>    * 信号的数字标识    1<br>    * 信号的完整名称    SIGHUP<br>    * 信号的简写名称    HUP</p><p>向进程发信号：<br>    kill [-s |signal|-SIGNAL] PID…</p><pre><code>常用信号：* 1号进程：SIGHUP ：无需关闭进程让其重读配置文件；* 2号进程：SIGINT ：中止正在运行的进程，相当于ctrl+C* 9号进程：SIGKILL ：杀死运行中的进程；不管是否打开文件。直接杀掉；可能会损坏该进程打开的文件* 15号进程：SIGTERM：终止运行中的进程；* 18 ：SIGCONT * 19 ：SIGSTOP </code></pre><h2 id="killall-命令："><a href="#killall-命令：" class="headerlink" title="killall 命令："></a>killall 命令：</h2><p>kill process by NAME<br><code>killall httpd</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;系统调用&quot;&gt;&lt;a href=&quot;#系统调用&quot; class=&quot;headerlink&quot; title=&quot;系统调用&quot;&gt;&lt;/a&gt;系统调用&lt;/h2&gt;&lt;p&gt;read（），open（），write（）；&lt;/p&gt;
&lt;p&gt;程序开发成内部多个执行流，每个执行流可单独运行与一个cpu核心上
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>14.linux进程原理、类型和内核状态</title>
    <link href="http://yoursite.com/2020/06/15/14-linux%E8%BF%9B%E7%A8%8B%E5%8E%9F%E7%90%86%E3%80%81%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%86%85%E6%A0%B8%E7%8A%B6%E6%80%81/"/>
    <id>http://yoursite.com/2020/06/15/14-linux%E8%BF%9B%E7%A8%8B%E5%8E%9F%E7%90%86%E3%80%81%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%86%85%E6%A0%B8%E7%8A%B6%E6%80%81/</id>
    <published>2020-06-15T05:08:34.000Z</published>
    <updated>2020-06-15T13:08:48.763Z</updated>
    
    <content type="html"><![CDATA[<p>软中断、发起内核调用；用户态，内核态，</p><p>系统调用：</p><p>用户模式（空间）、内核模式（空间）；</p><p>用户模式无法完成的操作，需要系统调用；实现模式切换；</p><p>内核的功用：进程管理、文件系统、网络功能、内存管理、驱动程序、安全功能；</p><p>时间片：按时间片划分资源，</p><p>进程优先级概念：</p><p>内核负责进程调度，根据优先级调度资源；</p><p>进程的当前状态保存下来；</p><p>内核在进程切换时需要保存上一个进程运行的现场。保存现场；–&gt; 恢复现场、切换太多会浪费时间；</p><p>进程–&gt; 运行中的程序的一个副本：</p><p>存在生命周期：</p><p>每一个进程结构都相同</p><p>内核存储进程的格式：task struct</p><p>多个人的task struct组成的链表：链表：有先后次序、（循环链表、双向链表、双向循环链表）</p><p>任何进程、在内核无漏洞的情况下、无权运行特权指令；</p><p>如果要运行，会出发中断，会立即唤醒内核，内核处理中断；</p><p>进程创建：</p><p>启动启动时–&gt;运行内核–&gt;创建第一个进程（init）（初始化进程）表示内核空间和用户空间都已经创建，init是负责用户空间管理–&gt;创建子进程</p><p>除了init（内核创建）之外，其余进程都是由父进程创建，fork（），clone（）父进程的内存空间也是子进程的内存空间，子进程创建数据需要写实复制。进程 必须是父进程给他销毁（白发送黑发）；子进程是为父进程完成特定任务，子进程任务时，父进程在等待状态，子进程任务结束后，父进程销毁，并继续往下走；</p><p>优先级：</p><p>0-139</p><p>1-99：实时优先级：数字越大—&gt;优先级越高</p><p>100-139：静态优先级；用户可控的；，数字越小&lt;—-优先级越高；</p><p>NICE值：-20 —- 19</p><p>​                    |        |</p><p>​                100        139</p><p>可以调整一个进程的nice值来控制优先级；</p><p>Big O</p><p>O(1)、O(logn)、O(n),O(2^n)、O(n^2)</p><p>|</p><p>|——————————————O(1)</p><p>|</p><p>|——————————————</p><p>优先队列：</p><p>运行队列，过期队列；</p><p>进程结构：task struct</p><p>状态</p><p>flags</p><p>父进程</p><p>。。。</p><p>内核对内存的分配；</p><p>分割成内存片，一般为4k，页框，用存储页面数据；</p><p>每一个进程都以为自己是唯一的进程；</p><p>线性地址空间；</p><p>内核只给进程它所需要的；</p><p>虚拟内存空间；</p><p>堆栈</p><p>堆向栈增长，栈向堆生长；</p><p>LRU算法，最近最少使用，分配到交换分区；</p><p>MMU:Memory Management Unit:内存管理单元；</p><p>转换虚拟内存空间和物理内存的映射关系；</p><p>缺页；</p><p>常驻内存级；必须在内存</p><p>虚拟内存级：可被交换的内存空间；</p><p>IPC：Inter Press Communication 进程间通信；</p><p>同一主机上：</p><p>​    singal</p><p>​    shm：shared memory</p><p>​    semerphor：</p><p>跨主机：</p><p>RPC：remote procecure call：远程过程调用；</p><p>socket文件：记录自己和对方的端口；</p><p>​        A                                B</p><p>|———|                      |———|</p><p>|socket|—————   |socket|</p><p>|———|                      |———|</p><p>​    |                                        |</p><p>​    |                                        |</p><p>内核                                    内核</p><p>Linux内核：抢占式多任务；</p><p>进程类型：</p><p>​    守护进程：daemon，在系统引导过程中启动的进程，跟终端无关的进程</p><p>​    前台进程：根终端有关，通过终端启动的进程；</p><p>​        注意，也可把在前台启动的进程送往后台，以守护模式运行；</p><p>进程状态：</p><p>​    运行态：running</p><p>​    就绪态：ready</p><p>​    睡眠态：</p><p>​        可中断:interruptable；</p><p>​        不可中端：uninterruptable；</p><p>​    停止态：暂停于内存中，但不会被调度，除非手动启动：stopped</p><p>​    僵尸态：zombie ，（子进程运行中，父进程突然就挂了）</p><p>进程的分类：</p><p>CPU-BOUND：cpu密集型进程（多分cpu）</p><p>IO-BOUND：IO密集型进程（提高优先级）</p><p>IO：进程运行过程中加载数据，IO分2段，1.数据从磁盘装入内核。2内核复制一份到内存中，</p><p>《《linux内核设计与实现》》。《《深入理解linux内核》》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;软中断、发起内核调用；用户态，内核态，&lt;/p&gt;
&lt;p&gt;系统调用：&lt;/p&gt;
&lt;p&gt;用户模式（空间）、内核模式（空间）；&lt;/p&gt;
&lt;p&gt;用户模式无法完成的操作，需要系统调用；实现模式切换；&lt;/p&gt;
&lt;p&gt;内核的功用：进程管理、文件系统、网络功能、内存管理、驱动程序、安全功能；&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>13.网络基础</title>
    <link href="http://yoursite.com/2020/06/15/13-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/06/15/13-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</id>
    <published>2020-06-15T05:07:53.000Z</published>
    <updated>2020-06-15T13:08:21.064Z</updated>
    
    <content type="html"><![CDATA[<p>计算机网络基础、</p><p>CCNA</p><p>IPV4:32位</p><p>IPV6:128位</p><p>通信时,进程的数字标识</p><p>16bit</p><p>0-65535:1-65535</p><p>1-1023：固定分配，只有管理员有权限启用；</p><p>1024-4W：半固定</p><p>4W+: 临时</p><p>进程地址：</p><p>IP：port，socket</p><p>MAC：本地通信，范围，本地局域网</p><p>IP：界定通信主机，源和目标主机；范围：互联网；</p><p>port：界定进程，范围：主机</p><p>​                    OSI                                    TCP（事实标准）</p><p>资源子网：应用层                                应用层</p><p>​                    表示层</p><p>​                    会话层</p><p>通信子网：传输层                            传输层</p><p>​                    网络层                            网络层</p><p>​                    数据链路层                    物理层</p><p>​                    物理层                            </p><p>OS：</p><p>用户空间：应用提供资源</p><p>内核空间：进程调度，内存分配，网络功能（TCP协议栈）</p><p>端口由内核分配</p><p>路由表：</p><ul><li>静态学习</li><li>动态学习：rlp2，ospf</li></ul><p>路由条目：</p><ul><li>目标地址 下一跳（nexthop）</li><li>主机路由</li><li>网络路由</li><li>默认路由</li></ul><p>优先选择匹配范围最小的</p><p>将一台Linux主机接入到网络中实现网络通信：</p><ul><li>IP/MASK：本地通信；</li><li>路由：跨网络通信；</li><li>DNS服务器地址：基于主机名的通信；<ul><li>主dns服务器</li><li>次dns服务器</li><li>第三备用dns服务器</li></ul></li><li>配置方式<ul><li>动态分配DHCP</li><li>静态分配</li><li>ifcfg家族<ul><li>ifconfig：配置ip，netmask</li><li>route：路由</li><li>netstat：状态及统计数据查看</li></ul></li><li>iproute2家族：–&gt;in OBJECT：<ul><li>addr：地址和掩码</li><li>link：接口</li><li>route：路由</li><li>ss：状态及统计数据查看</li></ul></li><li>Centos7：NM（NetworkManager）家族<ul><li>nmcli：命令行工具</li><li>nmtui：text window工具</li></ul></li><li>注意：<ul><li>DNS服务器的指定–&gt;配置文件：/etc/resolv.conf</li><li>主机名：<ul><li>hostname</li><li>配置文件：/etc/sysconfig/network</li><li>Centos7：hostnamectl</li></ul></li></ul></li><li>配置文件：<ul><li>Redhat及相关发行版<ul><li>/etc/sysconfig/network-scripts/ifcfg-NETCARD_NAME</li></ul></li></ul></li></ul></li></ul><p>网卡接口命名方式：</p><ul><li><p>传统命名：</p><ul><li>以太网：ethx,[0,oo],例如eth0,rth1…</li><li>PPP网络：pppx[0,…]，例如：ppp0,ppp1，…</li></ul></li><li><p>可预测命名方案（Centos）：</p><ul><li>支持多种不同的命名机制：</li><li>Firmwar，拓扑结构</li></ul><ol><li>如果Firmware或BIOS为主板上集成的设备提供的索引信息可用，则根据此索引进行命名，如eno1，eno2，…</li><li>如果Firmware或BIOS为PCI-E扩展槽所提供的索引信息可用，且可预测，则根据此索引进行命名，如ens1，ens2，…</li><li>如果硬件接口的物理位置信息可用，则根据此信息命名，如enp2s0，…</li><li>如果用户显示定义，也可根据MAC地址命名，例如enx122161ab2e10，…</li><li>上述均不可用时，则仍使用传统方式命名；</li></ol><p>命名格式的组成：</p><p>​    en：ethernet</p><p>​    wl：wlan</p><p>​    ww：wwan</p><p>​    名称类型：</p><p>​        o&lt;index&gt;：集成设备的设备索引号；</p><p>​        s&lt;slot&gt;：扩展槽的索引号；</p><p>​        x&lt;MAC&gt;：基于MAC地址的命名；</p><p>​        p&lt;bus&gt;s&lt;slot&gt;：基于总线及槽的拓扑结构命名；</p></li></ul><p>PDU –&gt;  数据报文 –&gt; 数据帧</p><p>协议传输单元</p><p>链路层：以太网帧</p><p>互联网层：IP报文</p><p>以太网帧：MTU（1500）</p><p>linux配置命令：</p><p>ifcfg命令家族：ifconfig,route,netstat</p><p>ifconfig:</p><p>UP：激活</p><p>MTU：最大传输单元 (Maximum transmission unit)</p><p>MULTICAST:多播（组播）</p><p>BROADCAST：广播</p><p>prefixlen：前缀</p><p>txqueuelen：</p><p>RX：接收 ：主要关注dropped,overruns这两项；</p><p>TX：发送</p><p>ether：centos7表示以太网，相当于centos6 HWaddr：MAC地址；</p><p>txqueuelen：传输队列长度</p><p>EXP:</p><p><code>ifconfig eth1 192.168.10.100/24 up</code></p><p><code>ifconfig eth1 192.168.10.100 netmask 255.255.255.0</code></p><p>送往内核中的tcp/ip协议栈，立即生效；</p><p>启用混杂模式：</p><p><code>ifconfig eth1 promisc</code></p><p><code>ifconfig eth1 -promisc</code></p><p>管理IPV6：</p><p><code>add addr/prefixlen</code></p><p><code>del addr/prefixlen</code></p><p>ROUTE命令：</p><p>路由类型：</p><p>主机路由    目标为单个IP</p><p>网络路由    目标为网络主机</p><p>默认路由：目标为任意主机</p><p>route -n：查看显示路由条目，-n指以数字格式显示，不反解路由条目；</p><p>Kernel IP routing table</p><p>Destination     Gateway        Genmask    Flags    Metric    Ref    Use    Iface</p><p><code>route add -net 10.0.0.0/8 gw 192.168.10.1 dev eth1</code></p><p><code>route add -net 0.0.0.0/0.0.0.0 gw 192.168.10.1 dev eth1</code></p><p><code>route add default gw 192.168.10.1</code></p><p><code>route del -net 10.0.0.0/8 gw 192.168.10.0</code></p><p><code>route del default</code></p><p>Netstat 命令</p><p>显示路由表：netstat -rn</p><p>​    -r：显示内核路由表</p><p>​    -n：数字格式</p><p>显示网络连接：</p><p>​    netstat [–tcp|-t] [–udp|-u]</p><p>​    -t：tcp相关的连接</p><p>​    -u：UDP</p><p>​    -w：raw    </p><p>​    -l：处于监听的连接</p><p>​    -a：所有状态</p><p>​    -n：数字格式显示ip和port</p><p>​    -e：扩展格式</p><p>​    -p：显示进程及PID</p><p>常用组合：ntlp。pantu。nta，utp</p><p>​    传输层协议：</p><p>​    tcp：面向连接的协议。要建立连接，通信完成拆除连接；</p><p>​    udp：无连接的协议；直接发送报文；</p><p>所有接口</p><p>​    netstat -i</p><p>指定接口</p><p>​    netsrtat -I &lt;IFACE&gt;</p><p>ifup/ifdown 命令</p><p>通过配置文件来识别接口并完成配置</p><p>/etc/sysconfig/network-scripts/ifcfg-IFACE</p><p>hostname命令</p><p>查看：hostname</p><p>配置：hostname HOSTNAME     重启失效</p><p>Centos7：hostnamectl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@testlab:~<span class="comment"># hostnamectl --help</span></span><br><span class="line">hostnamectl [OPTIONS...] COMMAND ...</span><br><span class="line"></span><br><span class="line">Query or change system hostname.</span><br><span class="line"></span><br><span class="line">  -h --<span class="built_in">help</span>              Show this <span class="built_in">help</span></span><br><span class="line">     --version           Show package version</span><br><span class="line">     --no-ask-password   Do not prompt <span class="keyword">for</span> password</span><br><span class="line">  -H --host=[USER@]HOST  Operate on remote host</span><br><span class="line">  -M --machine=CONTAINER Operate on <span class="built_in">local</span> container</span><br><span class="line">     --transient         Only <span class="built_in">set</span> transient hostname</span><br><span class="line">     --static            Only <span class="built_in">set</span> static hostname</span><br><span class="line">     --pretty            Only <span class="built_in">set</span> pretty hostname</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  status                 Show current hostname settings<span class="comment">#显示当前主机名信息；</span></span><br><span class="line">  <span class="built_in">set</span>-hostname NAME      Set system hostname<span class="comment">#设定主机名，永久有效；</span></span><br><span class="line">  <span class="built_in">set</span>-icon-name NAME     Set icon name <span class="keyword">for</span> host</span><br><span class="line">  <span class="built_in">set</span>-chassis NAME       Set chassis <span class="built_in">type</span> <span class="keyword">for</span> host</span><br><span class="line">  <span class="built_in">set</span>-deployment NAME    Set deployment environment <span class="keyword">for</span> host</span><br></pre></td></tr></table></figure><p>配置文件：/etc/sysconfig/network</p><p>HOSTNAME=&lt;HOSTNAME&gt;</p><p>此方法不会立即生效，但是会一直有效</p><p>配置DNS服务器指向:</p><p>配置件：/etxc/resolv.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7 ~]<span class="comment"># cat /etc/resolv.conf</span></span><br><span class="line"><span class="comment"># Generated by NetworkManager</span></span><br><span class="line">search localdomain</span><br><span class="line">nameserver 192.168.1.2<span class="comment">#注意写IP，不能写域名</span></span><br></pre></td></tr></table></figure><p>测试DNS（dig、host、nslookup）</p><p>dig -t A FQDN</p><p>​    FQDN–IP</p><p>互联网大多数主机名不支持反解，就是从IP解析到域名</p><p>dig -x IP</p><p>IP–FQDN</p><p><strong>iproute2家族:</strong></p><p>IP命令:查看，管理，路由，设备，策略路由，隧道</p><p> ip [ OPTIONS ] OBJECT { COMMAND | help }</p><p>OBJECT ：命令可简写，只要能唯一识别</p><p>link | address | route</p><p>ip link：网络设备的配置（add、show、set、delete）</p><ul><li>ip link set  :改便设备运行状态<ul><li>ip link set dev IFACE up/down</li><li>multicast on/off 开启/关闭多播功能；</li><li>promisc on/off：启用/关闭混杂模式</li><li>name:改网卡名（改之前先停用网卡）</li><li>txqueuelen：队列长度</li><li>mtu：设置MTU大小，默认1500</li><li>netns：net namespace，用于将接口移动到指定的网络名称空间去（类似虚拟机）<ul><li>ip netns add </li><li>ip netns list</li><li>ip netns del</li><li>ip netns exec NAME COMMAAND</li></ul></li></ul></li><li>ip link show</li><li>ip link help</li></ul><p><strong>ip address add</strong></p><p>​    ip address add IFADDR dev IFNAME</p><p>​    label NAME ：为额外添加的IP地址指明接口别名；</p><p>​    [broadcast ADDRESS]：广播地址；会根据IP和NETMASK自动计算得到；</p><p>​    [scope SCOPE_VALUE]：global（全局可用）、site（IPV6）、link（接口可用）、host（仅本机可用、内部使用）</p><p><strong>ip address del</strong></p><p>​    ip address delIFADDR dev IFNAME</p><p> <strong>ip address show</strong></p><p>​    [iFACE] ：仅显示指定接口；</p><p>ip address flush dev</p><p><strong>ip route add|delete|show |flush|get</strong></p><p>​    ip route add TYPE PREFIX via GW [dev IFACE] [src SOURCE_IP]</p><p>exp:</p><p><code>ip route add 192.168.0.0/24 via 10.0.0.1 dev eth1</code></p><p><code>ip route add 192.168.1.0/24 via 192.168.1.128 dev eth1 src 192.168.1.128</code> （src为本机网卡地址中的其中一个）</p><p>​    ip route add default via GW；</p><p><code>ip route add default via 192.168.1.2</code></p><p><strong>ip route del</strong></p><p>#ip route delete 192.168.1.0/24</p><p><strong>ip route get TYPE PREFIX</strong></p><p>#ip route get 192.168.0.0/24</p><p>SS 命令：</p><ul><li>-t ：tcp</li><li>-u：udp</li><li>-w：raw</li><li>-l：listen</li><li>-a：所有状态</li><li>-n：数字格式</li><li>-p：PID和进程</li><li>-e：扩展</li><li>-m：内存用量</li><li>-o：计时器信息</li></ul><p>FILTER := [ state STATE-FILTER ] [ EXPRESSION ]：过滤选项</p><p>TCP的常见状态：</p><p>TCP FSM：</p><p>​    LISTEN：监听</p><p>​    ESTABLISEHD：建立的连接</p><p>​    FIN_WAIT_1：</p><p>​    FIN_WAIT_2:</p><p>​    SYN_SENT:</p><p>​    SYN_RECV:</p><p>​    CLOSED:</p><p>EXPRESSION:</p><p>​    dport=</p><p>​    sport=</p><p>​        示例：ss -tan state 状态</p><p>配置文件：/etx/sysconfig/network-scripts/ifcfg-IFACE</p><p>IP/NETMASK/GW/DNS等专属的配置文件：</p><p>IFACE：接口名称</p><p>路由的相关配置文件：</p><p>/etc/sysconfig/network-scripts/route-IFACE</p><p>配置文件/etc/sysconfig/network-scripts/ifcfg-IFACE通过大量参数来定义接口的属性；其可通过vim等文本编辑器直接修改，也可以使用专用的命令的进行修改</p><p>centos6：system-config-network</p><p>centos7：nmtui，nmcli</p><p>ifcfg-IFACE配置文件参数：</p><ul><li>DEVICE：设备名称，与IFACE必须保持一致；</li><li>ONBOOT：在系统引导过程中是否激活设备；</li><li>NETBOOT：是否支持网络引导；</li><li>UUID：此设备的唯一标识；</li><li>IPV6INIT：是否初始化IPV6；</li><li>BOOTPROTO=激活此接口时使用什么协议配置接口属性，常用的有dhcp，bootp，static=none；</li><li>TYPE：指定接口类型；</li><li>DNS1~~DNS2：DNS服务器指向；</li><li>DOMAIN：DNS搜索域；</li><li>DEFROUTE：是否默认路由所使用接口；</li><li>GATEWAY：默认网关；</li><li>IPADDR：IP地址；</li><li>NETMASK：子网掩码；Centos7支持使用prefix以长度方式指明子网掩码；</li><li>IPV4_FAILURE_FATAL ：</li><li>USERCTL：是否允许普通用户控制此设备；</li><li>PEERDNS：如果bootproto的值为’dhcp‘，是否允许dhcpserver分配的dns服务器指向覆盖本地手动指定的dns服务器；默认为允许；</li><li>NM_CONTROLLED：是否使用NetworkManager服务来控制接口配置；</li></ul><p>网络服务：</p><p>​    network</p><p>​    NetworkManager</p><p>管理网络服务</p><p>​    centos6：service SERVICE {start|status|restart|stop}</p><p>​    centos7：systemctl {status|start|stop|restart} SERVICE</p><p>配置修改以后，如果要生效，需要重启网络服务</p><p>centos6：service network restart</p><p>centos7：systemctl restart network.service</p><p>用到非默认网关路由：/etc/sysconfig/network-scripts/route-IFACE</p><p>支持两种配置方式，但是不可混用；</p><ol><li><p>每行一个路由条目</p><p>​    TARGET via GW</p><ol start="2"><li>每三行一个路由条目：</li></ol><p>ADDRESS#=TARGET</p><p>NETMASK#=MASK</p><p>GATEWAY#=NEXTHOP</p></li></ol><p>ifconfig 也可以添加多个IP地址</p><p>1.ifconfig IFACE——LABEL IPADDR/NETMASK</p><p>​    IFACE_LABEL：eth0，eth1</p><p>为别名添加配置文件：</p><p>DEVICE=IFACE_LABEL</p><p>BOOTPROTO：网上别名不支持动态获取</p><p>static，none；</p><p>NMCLI：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;计算机网络基础、&lt;/p&gt;
&lt;p&gt;CCNA&lt;/p&gt;
&lt;p&gt;IPV4:32位&lt;/p&gt;
&lt;p&gt;IPV6:128位&lt;/p&gt;
&lt;p&gt;通信时,进程的数字标识&lt;/p&gt;
&lt;p&gt;16bit&lt;/p&gt;
&lt;p&gt;0-65535:1-65535&lt;/p&gt;
&lt;p&gt;1-1023：固定分配，只有管理员有权限启
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Trinity安装备忘</title>
    <link href="http://yoursite.com/2020/06/02/Trinity%E5%AE%89%E8%A3%85%E5%A4%87%E5%BF%98/"/>
    <id>http://yoursite.com/2020/06/02/Trinity%E5%AE%89%E8%A3%85%E5%A4%87%E5%BF%98/</id>
    <published>2020-06-02T07:29:35.000Z</published>
    <updated>2020-06-02T15:29:51.607Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Trinity-core-3-3-5"><a href="#Trinity-core-3-3-5" class="headerlink" title="Trinity core 3.3.5"></a>Trinity core 3.3.5</h1><h2 id="1-Linux-Requirements"><a href="#1-Linux-Requirements" class="headerlink" title="1. Linux Requirements"></a>1. Linux Requirements</h2><h3 id="debian-10-4"><a href="#debian-10-4" class="headerlink" title="debian 10.4"></a>debian 10.4</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install git clang cmake make gcc g++ libmariadbclient-dev libssl-dev libbz2-dev libreadline-dev libncurses-dev libboost-all-dev mariadb-server p7zip default-libmysqlclient-dev</span><br><span class="line">update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100</span><br><span class="line">update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang 100</span><br></pre></td></tr></table></figure><h3 id="ubuntu-19-10"><a href="#ubuntu-19-10" class="headerlink" title="ubuntu 19.10"></a>ubuntu 19.10</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install git clang cmake make gcc g++ libmariadbclient-dev libssl-dev libbz2-dev libreadline-dev libncurses-dev libboost-all-dev mariadb-server p7zip libmariadb-client-lgpl-dev-compat</span><br><span class="line">update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100</span><br><span class="line">update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang 100</span><br></pre></td></tr></table></figure><h3 id="Fedora-based-distributions"><a href="#Fedora-based-distributions" class="headerlink" title="Fedora based distributions"></a>Fedora based distributions</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dnf install https://dev.mysql.com/get/mysql57-community-release-fc27-1.noarch.rpm</span><br><span class="line">dnf install git clang cmake make gcc gcc-c++ community-mysql-devel compat-openssl10-devel bzip2-devel readline-devel ncurses-devel boost-devel community-mysql-server p7zip</span><br><span class="line">rm -f /usr/bin/c++</span><br><span class="line">update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100</span><br><span class="line">update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang 100</span><br></pre></td></tr></table></figure><h2 id="2-Core-Installation"><a href="#2-Core-Installation" class="headerlink" title="2. Core Installation"></a>2. Core Installation</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adduser &lt;username&gt;</span><br><span class="line">su - &lt;username&gt;</span><br><span class="line">git <span class="built_in">clone</span> -b 3.3.5 git://github.com/TrinityCore/TrinityCore.git</span><br><span class="line"><span class="built_in">cd</span> TrinityCore</span><br><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ../ [additional parameters]</span><br></pre></td></tr></table></figure><h3 id="The-above-parameters-when-combined-into-a-full-example"><a href="#The-above-parameters-when-combined-into-a-full-example" class="headerlink" title="The above parameters when combined into a full example :"></a>The above parameters when combined into a full example :</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">By default this is the only row you will need to run to setup your install:</span><br><span class="line">cmake ../ -DCMAKE_INSTALL_PREFIX=/home/&lt;username&gt;/server</span><br><span class="line"> </span><br><span class="line">Another Examples Below:</span><br><span class="line">cmake ../ -DCMAKE_INSTALL_PREFIX=/home/wow/server -DTOOLS=0</span><br><span class="line">cmake ../ -DCMAKE_INSTALL_PREFIX=/home/<span class="variable">$USER</span>/server -DTOOLS=0 -DWITH_WARNINGS=1</span><br></pre></td></tr></table></figure><h3 id="3-Building-the-core"><a href="#3-Building-the-core" class="headerlink" title="3. Building the core"></a>3. Building the core</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j&lt;number of cores&gt;</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="update"><a href="#update" class="headerlink" title="update"></a>update</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/TrinityCore/</span><br><span class="line"><span class="comment"># For 3.3.5 Branch</span></span><br><span class="line">git pull origin 3.3.5</span><br></pre></td></tr></table></figure><h2 id="4-Server-Setup"><a href="#4-Server-Setup" class="headerlink" title="4. Server Setup"></a>4. Server Setup</h2><table><thead><tr><th>Directory</th><th>Branch</th><th></th></tr></thead><tbody><tr><td>dbc</td><td>all</td><td>Mandatory</td></tr><tr><td>maps</td><td>all</td><td>Mandatory</td></tr><tr><td>vmaps</td><td>all</td><td>HIGHLY Recommended</td></tr><tr><td>mmaps</td><td>all</td><td>HIGHLY Recommended</td></tr><tr><td>cameras</td><td>all</td><td>Recommended</td></tr><tr><td>gt</td><td>master only</td><td>Mandatory</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;your WoW client directory&gt;</span><br><span class="line">/home/&lt;username&gt;/server/bin/mapextractor</span><br><span class="line">mkdir /home/&lt;username&gt;/server/data</span><br><span class="line">  </span><br><span class="line"><span class="comment"># Next line is 3.3.x only</span></span><br><span class="line">cp -r dbc maps /home/&lt;username&gt;/server/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># edit worldserver.conf and change datadir from "." to "../data"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;your WoW client directory&gt;</span><br><span class="line">/home/&lt;username&gt;/server/bin/vmap4extractor</span><br><span class="line">mkdir vmaps</span><br><span class="line">/home/&lt;username&gt;/server/bin/vmap4assembler Buildings vmaps</span><br><span class="line">cp -r vmaps /home/&lt;username&gt;/server/data</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;your WoW client directory&gt;</span><br><span class="line">mkdir mmaps</span><br><span class="line">/home/&lt;username&gt;/server/bin/mmaps_generator</span><br><span class="line">cp -r mmaps /home/&lt;username&gt;/server/data</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp worldserver.conf.dist worldserver.conf</span><br><span class="line">cp authserver.conf.dist authserver.conf <span class="comment"># 3.3.5 only</span></span><br><span class="line">cp bnetserver.conf.dist bnetserver.conf <span class="comment"># 6.x, 7.x only</span></span><br></pre></td></tr></table></figure><h2 id="5-Databases-Installation"><a href="#5-Databases-Installation" class="headerlink" title="5. Databases Installation"></a>5. Databases Installation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#39;trinity&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;trinity&#39; WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0;</span><br><span class="line"></span><br><span class="line">GRANT USAGE ON * . * TO &#39;trinity&#39;@&#39;localhost&#39;;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;world&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;characters&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;auth&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;world&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;characters&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;auth&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><h2 id="6-Networking"><a href="#6-Networking" class="headerlink" title="6. Networking"></a>6. Networking</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">use auth</span><br><span class="line">update realmlist <span class="built_in">set</span> address=<span class="string">'IP'</span>;</span><br></pre></td></tr></table></figure><h2 id="7-Final-Server-Steps"><a href="#7-Final-Server-Steps" class="headerlink" title="7. Final Server Steps"></a>7. Final Server Steps</h2><p><strong>account create USER PASSWORD</strong></p><p><strong>account set gmlevel USER 3 -1</strong></p><h2 id="8-Client-Setup"><a href="#8-Client-Setup" class="headerlink" title="8. Client Setup"></a>8. Client Setup</h2><ul><li>Open the realmlist.wtffile inside your World of Warcraft\Data folder. The IP in the realmlist.wtf file should be exactly the same as the IP address you entered in the realmlist table above.<ul><li>Change the first line to: *<em>set realmlist *</em></li><li>Example: <strong>set realmlist 127.0.0.1</strong></li></ul></li><li>(Optional) If you wish to use the WoW Launcher.exe to run your client then you must change your <strong>set patchlist</strong> to the same ip/dns name as your realmlist.</li></ul><h1 id="mysql命令导入"><a href="#mysql命令导入" class="headerlink" title="mysql命令导入"></a>mysql命令导入</h1><h2 id="1-mysql命令导入多个sql文件方法："><a href="#1-mysql命令导入多个sql文件方法：" class="headerlink" title="1 mysql命令导入多个sql文件方法："></a>1 mysql命令导入多个sql文件方法：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ for SQL in *.sql; do mysql -uroot -p&quot;123456&quot; mydb &lt; $SQL; done</span><br></pre></td></tr></table></figure><h2 id="2-source命令导入"><a href="#2-source命令导入" class="headerlink" title="2 source命令导入"></a>2 source命令导入</h2><p><code>source</code>命令需要首先进入<strong>MySQL命令行</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p&quot;123456&quot;</span><br></pre></td></tr></table></figure><p><strong>导入多个sql**</strong>文件<strong>需要先创建一个额外的文件，名字随意，这里我们取：</strong>all.sql**，内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source user1.sql</span><br><span class="line">source user2.sql</span><br><span class="line">source user3.sql</span><br></pre></td></tr></table></figure><p><strong>注意，这里每行一条，必须以source命令开头。</strong></p><p>然后用<code>source</code>命令执行该文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; use mydb;</span><br><span class="line">mysql &gt; source &#x2F;home&#x2F;gary&#x2F;all.sql</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Trinity-core-3-3-5&quot;&gt;&lt;a href=&quot;#Trinity-core-3-3-5&quot; class=&quot;headerlink&quot; title=&quot;Trinity core 3.3.5&quot;&gt;&lt;/a&gt;Trinity core 3.3.5&lt;/h1&gt;&lt;h2 id=&quot;1
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Master版本编译安装总结</title>
    <link href="http://yoursite.com/2020/05/31/Master%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/05/31/Master%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E6%80%BB%E7%BB%93/</id>
    <published>2020-05-31T21:18:30.000Z</published>
    <updated>2020-06-01T05:18:58.822Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TrinityCore"><a href="#TrinityCore" class="headerlink" title="TrinityCore"></a>TrinityCore</h1><h2 id="项目简介："><a href="#项目简介：" class="headerlink" title="项目简介："></a>项目简介：</h2><p><strong>TrinityCore</strong>是主要基于C ++ 的<em>MMORPG</em>框架。</p><p>它是从<em>MaNGOS</em>（<em>大型网络游戏对象服务器</em>）派生而来的，它基于该项目的代码，该代码随着时间的流逝发生了很大的变化，以在优化游戏机制和功能的同时优化，改进和清理代码库。MANGOS技术组骨干成员进行研发，在技术和经验上都有很好的保证 。</p><p>TrinityCore维护的版本目前有2个，分别是：3.3.5a的WLK版本、master（同步官服）版本;</p><ul><li>官网：<a href="https://www.trinitycore.org/" target="_blank" rel="noopener">https://www.trinitycore.org</a></li><li>源码：<a href="https://github.com/TrinityCore" target="_blank" rel="noopener">https://github.com/TrinityCore</a></li></ul><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Processor with SSE2 support </span><br><span class="line">Boost ≥ 1.58</span><br><span class="line">MySQL ≥ 5.7.0</span><br><span class="line">OpenSSL ≥ 1.0.x</span><br><span class="line">CMake ≥ 3.13.4</span><br><span class="line">Clang  ≥ 5 (heavy recommended, especially on master branch) or GCC ≥ 7.1.0</span><br><span class="line">zlib ≥ 1.2.7</span><br></pre></td></tr></table></figure><p>debian 10.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install git clang cmake make gcc g++ libmariadbclient-dev libssl-dev libbz2-dev libreadline-dev libncurses-dev libboost-all-dev mariadb-server p7zip default-libmysqlclient-dev</span><br><span class="line">update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100</span><br><span class="line">update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang 100</span><br></pre></td></tr></table></figure><p>ubuntu 19.10+</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install git clang cmake make gcc g++ libmariadbclient-dev libssl-dev libbz2-dev libreadline-dev libncurses-dev libboost-all-dev mariadb-server p7zip libmariadb-client-lgpl-dev-compat</span><br><span class="line">update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100</span><br><span class="line">update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang 100</span><br></pre></td></tr></table></figure><p>Fedora based distributions</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dnf install https://dev.mysql.com/get/mysql57-community-release-fc27-1.noarch.rpm</span><br><span class="line">dnf install git clang cmake make gcc gcc-c++ community-mysql-devel compat-openssl10-devel bzip2-devel readline-devel ncurses-devel boost-devel community-mysql-server p7zip</span><br><span class="line">rm -f /usr/bin/c++</span><br><span class="line">update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100</span><br><span class="line">update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang 100</span><br></pre></td></tr></table></figure><h2 id="Core-Installation"><a href="#Core-Installation" class="headerlink" title="Core Installation"></a>Core Installation</h2><p><code>sudo adduser &lt;username&gt;</code></p><p><code>sudo su - &lt;username&gt;</code></p><h3 id="Building-the-server-itself"><a href="#Building-the-server-itself" class="headerlink" title="Building the server itself"></a>Building the server itself</h3><h4 id="Getting-the-source-code"><a href="#Getting-the-source-code" class="headerlink" title="Getting the source code"></a>Getting the source code</h4><p><strong>3.3.5 (wotlk client)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/</span><br><span class="line">git <span class="built_in">clone</span> -b 3.3.5 git://github.com/TrinityCore/TrinityCore.git</span><br></pre></td></tr></table></figure><p><strong>master</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;</span><br><span class="line">git clone -b master git:&#x2F;&#x2F;github.com&#x2F;TrinityCore&#x2F;TrinityCore.git</span><br></pre></td></tr></table></figure><h4 id="Compiling-the-source-code"><a href="#Compiling-the-source-code" class="headerlink" title="Compiling the source code"></a>Compiling the source code</h4><p>Creating the build-directory</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> TrinityCore</span><br><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br></pre></td></tr></table></figure><h4 id="Configuring-for-compiling"><a href="#Configuring-for-compiling" class="headerlink" title="Configuring for compiling"></a>Configuring for compiling</h4><p><code>cmake ../ [additional parameters]</code></p><p>TIPS:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">By default this is the only row you will need to run to setup your install:</span><br><span class="line">cmake ../ -DCMAKE_INSTALL_PREFIX=/home/&lt;username&gt;/server</span><br><span class="line"> </span><br><span class="line">Another Examples Below:</span><br><span class="line">cmake ../ -DCMAKE_INSTALL_PREFIX=/home/wow/server -DTOOLS=0</span><br><span class="line">cmake ../ -DCMAKE_INSTALL_PREFIX=/home/<span class="variable">$USER</span>/server -DTOOLS=0 -DWITH_WARNINGS=1</span><br></pre></td></tr></table></figure><h4 id="Building-the-core"><a href="#Building-the-core" class="headerlink" title="Building the core"></a>Building the core</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="Keeping-the-code-up-to-date"><a href="#Keeping-the-code-up-to-date" class="headerlink" title="Keeping the code up to date"></a>Keeping the code up to date</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/TrinityCore/</span><br><span class="line"><span class="comment"># For 3.3.5 Branch</span></span><br><span class="line">git pull origin 3.3.5</span><br><span class="line">  </span><br><span class="line"><span class="comment"># For master Branch</span></span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><h3 id="Installing-MySQL-Server"><a href="#Installing-MySQL-Server" class="headerlink" title="Installing MySQL Server"></a>Installing MySQL Server</h3><p>rename the <strong>worldserver.conf.dist</strong> and <strong>authserver.conf.dist</strong> files in <strong>worldserver.conf</strong> and <strong>authserver.conf</strong></p><h2 id="Extractors"><a href="#Extractors" class="headerlink" title="Extractors"></a>Extractors</h2><table><thead><tr><th>Directory</th><th>Branch</th><th></th></tr></thead><tbody><tr><td>dbc</td><td>all</td><td>Mandatory</td></tr><tr><td>maps</td><td>all</td><td>Mandatory</td></tr><tr><td>vmaps</td><td>all</td><td>HIGHLY Recommended</td></tr><tr><td>mmaps</td><td>all</td><td>HIGHLY Recommended</td></tr><tr><td>cameras</td><td>all</td><td>Recommended</td></tr><tr><td>gt</td><td>master only</td><td>Mandatory</td></tr></tbody></table><h2 id="Extracting-DBC-Maps-VMaps-amp-MMaps"><a href="#Extracting-DBC-Maps-VMaps-amp-MMaps" class="headerlink" title="Extracting DBC, Maps, VMaps &amp; MMaps"></a>Extracting DBC, Maps, VMaps &amp; MMaps</h2><h4 id="DBC-and-Maps-files"><a href="#DBC-and-Maps-files" class="headerlink" title="DBC and Maps files"></a>DBC and Maps files</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#96;&#96;&#x2F;home&#x2F;&#x2F;server&#x2F;bin&#x2F;mapextractor&#96;&#96;mkdir &#x2F;home&#x2F;&#x2F;server&#x2F;data&#96;&#96; &#96; &#96;# Next line is 3.3.x only&#96;&#96;cp -r dbc maps &#x2F;home&#x2F;&#x2F;server&#x2F;data&#96;&#96;# Next line is 6.x, 7.x only&#96;&#96;cp -r dbc maps gt &#x2F;home&#x2F;&#x2F;server&#x2F;data&#96; &#96;edit worldserver.conf and change datadir from &#96;&#96;&quot;.&quot;&#96; &#96;to &#96;&#96;&quot;..&#x2F;data&quot;</span><br></pre></td></tr></table></figure><h4 id="Visual-Maps-aka-vmaps-Note-If-you-stop-vmap4extractor-before-finish-you-will-need-to-delete-the-Buildings-directory-before-start-again"><a href="#Visual-Maps-aka-vmaps-Note-If-you-stop-vmap4extractor-before-finish-you-will-need-to-delete-the-Buildings-directory-before-start-again" class="headerlink" title="Visual Maps (aka vmaps) Note: If you stop vmap4extractor before finish you will need to delete the Buildings directory before start again."></a>Visual Maps (aka vmaps) Note: If you stop vmap4extractor before finish you will need to delete the Buildings directory before start again.</h4><p>You can also extract vmaps which will take quite a while depending on your machine (up to hours on ancient hardware).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#96;&#96;&#x2F;home&#x2F;&#x2F;server&#x2F;bin&#x2F;vmap4extractor&#96;&#96;mkdir vmaps&#96;&#96;&#x2F;home&#x2F;&#x2F;server&#x2F;bin&#x2F;vmap4assembler Buildings vmaps&#96;&#96;cp -r vmaps &#x2F;home&#x2F;&#x2F;server&#x2F;data</span><br></pre></td></tr></table></figure><p>When this is complete you will receive the following message which can be safely ignored.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Processing Map 724&#96;&#96;[################################################################]&#96;&#96;Extracting GameObject models...Extracting World\Wmo\Band\Final_Stage.wmo&#96;&#96;No such file.&#96;&#96;Couldn&#39;t open RootWmo!!!&#96;&#96;Done!&#96;&#96; &#96; &#96;Extract V4.00 2012_02. Work complete. No errors.</span><br></pre></td></tr></table></figure><h4 id="Movement-Maps-aka-mmaps-optional-RECOMMENDED"><a href="#Movement-Maps-aka-mmaps-optional-RECOMMENDED" class="headerlink" title="Movement Maps  (aka mmaps - optional RECOMMENDED)"></a>Movement Maps  (aka mmaps - optional RECOMMENDED)</h4><p>Extracting mmaps will take quite a while depending on your machine (up to hours).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#96;&#96;mkdir mmaps&#96;&#96;&#x2F;home&#x2F;&#x2F;server&#x2F;bin&#x2F;mmaps_generator&#96;&#96;cp -r mmaps &#x2F;home&#x2F;&#x2F;server&#x2F;data</span><br></pre></td></tr></table></figure><h2 id="Setting-up-the-configuration-files"><a href="#Setting-up-the-configuration-files" class="headerlink" title="Setting up the configuration files"></a>Setting up the configuration files</h2><p>First of all you need to find the two default config files (named <strong>worldserver.conf.dist</strong> and <strong>authserver.conf.dist (\</strong>bnetserver.conf.dist in 6.x)*<strong>* ) and copy these to their namesakes without the **.dist</strong> extension. You can find them within /trinitycore/etc/ (may vary).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp worldserver.conf.dist worldserver.conf&#96;&#96;cp authserver.conf.dist authserver.conf # 3.3.5 only&#96;&#96;cp bnetserver.conf.dist bnetserver.conf # 6.x, 7.x only</span><br></pre></td></tr></table></figure><h2 id="Databases-Installation"><a href="#Databases-Installation" class="headerlink" title="Databases Installation"></a>Databases Installation</h2><p>3.3.5</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#39;trinity&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;trinity&#39; WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0;</span><br><span class="line"></span><br><span class="line">GRANT USAGE ON * . * TO &#39;trinity&#39;@&#39;localhost&#39;;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;world&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;characters&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;auth&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;world&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;characters&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;auth&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><p>master</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">GRANT USAGE ON * . * TO &#39;trinity&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;trinity&#39; WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 ;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;world&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;characters&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;auth&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">CREATE DATABASE &#96;hotfixes&#96; DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;world&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;characters&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;auth&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON &#96;hotfixes&#96; . * TO &#39;trinity&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><h4 id="Populating-the-MySQL-Trinity-databases"><a href="#Populating-the-MySQL-Trinity-databases" class="headerlink" title="Populating the MySQL Trinity databases"></a>Populating the MySQL Trinity databases</h4><p>下载github页面上的TDB文件，解压到程序主目录，就是有bin目录的那一层目录；</p><h2 id="Worldserver-and-Authserver-configurations"><a href="#Worldserver-and-Authserver-configurations" class="headerlink" title="Worldserver and Authserver configurations"></a>Worldserver and Authserver configurations</h2><p>更新数据库的<strong>Realmlist Table</strong></p><p>Open the <strong>auth</strong> database and find the <strong>realmlist</strong> table. You need to edit the <code>address</code> field </p><ul><li>LAN IP (192.168.x.x) - If you are installing TrinityCore on a different computer from where you run WoW, but all the computers involved are on the same network (router) use that computer’s Local Area Network IP.</li><li>127.0.0.1 - Also known as “localhost”. Leave this setting alone here and in your configs if you’ve installed TrinityCore on the same computer you run WoW on, and only you are connecting to it.</li><li>External IP – If you want other people to connect to your server, use your external IP. Visit <a href="http://www.whatismyip.com/" target="_blank" rel="noopener">http://www.whatismyip.com/</a> to find your external IP address.</li></ul><h2 id="Account-Creation-Examples"><a href="#Account-Creation-Examples" class="headerlink" title="Account Creation Examples:"></a>Account Creation Examples:</h2><h2 id="3-3-5"><a href="#3-3-5" class="headerlink" title="3.3.5"></a>3.3.5</h2><p><strong>To create your account: very important, don’t use @ on account names.</strong></p><p>Type: *<em>account create  *</em></p><p>Example: <strong>account create test test</strong></p><p><strong>To set your account level:</strong></p><p>Type: <strong>account set gmlevel  3 -1</strong></p><p>Example: <strong>account set gmlevel test 3 -1</strong></p><p><strong>Login to your account:</strong></p><p>Log in with account <strong>test</strong> and <strong>password</strong> test through <strong>wow.exe.</strong></p><h2 id="master"><a href="#master" class="headerlink" title="master"></a>master</h2><p><strong>To create your account:</strong></p><p>Type: *<em>bnetaccount create  *</em></p><p>Example: <strong>bnetaccount create test@test test</strong></p><p><strong>To set your account level:</strong></p><p>Type: <strong>account set gmlevel  3 -1</strong></p><p>Example: <strong>account set gmlevel 1#1 3 -1</strong></p><p>Note: The <strong>username</strong> used for setting your <strong>gmlevel</strong> is <strong>not the same as</strong> the <strong>username</strong> you create with <strong>bnetaccount</strong>. You must manually <strong>find</strong> the <strong>username in auth.account.username</strong>. These are formatted as <strong>1#1, 2#1, etc.</strong></p><p><strong>NOTE2: if you have connected before using this command you will need to relog.</strong></p><p><strong>Login to your account:</strong></p><p>Log in with email <strong>test@test</strong> and password <strong>test</strong>.through a <strong>Custom Client Launcher (Not provided).</strong></p><h2 id="Client-Setup"><a href="#Client-Setup" class="headerlink" title="Client Setup"></a>Client Setup</h2><p>3.35only</p><ul><li>Open the realmlist.wtf file inside your World of Warcraft\Data folder. The IP in the realmlist.wtf file should be exactly the same as the IP address you entered in the realmlist table above.<ul><li>Change the first line to: *<em>set realmlist *</em></li><li>Example: <strong><em>set realmlist 127.0.0.1\</em></strong></li></ul></li><li>(Optional) If you wish to use the WoW Launcher.exe to run your client then you must change your <strong>set patchlist</strong> to the same ip/dns name as your realmlist.</li></ul><p>master only</p><ul><li>Change <strong>Config.wtf</strong>: SET portal “****”</li><li>The IP in the Config.wtf file should be exactly the same as the IP address you entered in the realmlist table above. (Example: <strong>SET portal “127.0.0.1”</strong>)</li></ul><p>Note: you will need a custom client launcher (not provided) to connect to master branch server.</p><p>NOTE don’t use localhost for address, if you need to connect to localhost use 127.0.0.1</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TrinityCore&quot;&gt;&lt;a href=&quot;#TrinityCore&quot; class=&quot;headerlink&quot; title=&quot;TrinityCore&quot;&gt;&lt;/a&gt;TrinityCore&lt;/h1&gt;&lt;h2 id=&quot;项目简介：&quot;&gt;&lt;a href=&quot;#项目简介：&quot; class
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>103.为nginx创建ssl自签证书</title>
    <link href="http://yoursite.com/2020/05/31/103-%E4%B8%BAnginx%E5%88%9B%E5%BB%BAssl%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/"/>
    <id>http://yoursite.com/2020/05/31/103-%E4%B8%BAnginx%E5%88%9B%E5%BB%BAssl%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/</id>
    <published>2020-05-31T20:27:45.000Z</published>
    <updated>2020-06-01T04:27:45.966Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>12.sed</title>
    <link href="http://yoursite.com/2020/05/31/12-sed/"/>
    <id>http://yoursite.com/2020/05/31/12-sed/</id>
    <published>2020-05-31T20:27:31.000Z</published>
    <updated>2020-06-01T04:31:03.163Z</updated>
    
    <content type="html"><![CDATA[<p>文本处理三剑客：</p><p>sed、awk、grep</p><p>SED</p><p>不处理源文件，每次读入一行到自己的工作空间（模式空间），处理完成之后输出至标准输出</p><p>默认会处理所有行，我们可以指定让他处理匹配到的行</p><p>因此；</p><p>先读入一行，然后判断是否匹配我们给的PATTERN</p><p>匹配到处理</p><p>不匹配不做任何处理</p><p>pattern space</p><p>​    /            \</p><p>no                yes</p><p>|                /        |</p><p>|            /    edit –&gt; stdout</p><p>stdout                    |</p><p>​                        hold space</p><p>逐行读入，匹配处理</p><p>sed [OPTION]… ‘script’ [input-file]…</p><ul><li>script :地址定界编辑命令（直接写在一起）</li><li>-n 不输出，（读入之后一定会输出stdout，匹配到的会进行编辑）如果不希望输出，使用这个选项，不输出模式空间的内容；</li><li>-e script ; –expression=script :多点编辑<ul><li>sed -e ‘s@^#[[:space:]]*@@’ -e ‘/^UUID/d’ /etc/fstab</li></ul></li><li>-f  script-file 每行一个编辑命令</li><li>-r –regexp-extended ：支持使用扩展正则表达式</li><li>-i[SUFFIX], –in-place[=SUFFIX] ： 直接编辑源文件</li></ul><p>地址定界：</p><ol><li>不给地址：空地址，对全文进行编辑</li><li>单地址：<ul><li>#：指定行</li><li>/pattern/：被此模式匹配到的每一行；</li></ul></li><li>地址范围<ul><li>#.# :</li><li>#,+#:</li><li>#,/pat1/<ul><li>/pat1/,/pat2/</li></ul></li></ul></li><li>步进：~<ul><li>1-2：所有奇数行</li><li>2-2：所有偶数行</li></ul></li></ol><p>​    </p><p>编辑命令:</p><p>d 删除 注意删除的就不会再显示了,因为匹配到的内容被删除了，显示的是未删除的内容</p><p>p 显示模式空间中的内容；（如不加-n选项指定行会被显示2遍）</p><p>a \text ：在行后面追加文本“text”，支持使用\n添加多行</p><p>i \text：在行前面添加文本，支持使用\n插入多行</p><p>c \text：把匹配到的行替换为此处指定的文本“text”</p><p>w /path/to/somewhere：保存模式空间匹配到的行至指定的文件中；</p><p>r /path/from/somefile：读取指定的文件的内容至当前文件被模式匹配到的行后面，文件合并；</p><p>=：模式匹配到的行加行号</p><p>！：条件取反：格式为地址定界!编辑命令；</p><p>s///：查找替换，其分隔符可自行指定。常用s@@@，s###等；</p><p>替换标记：</p><ul><li>g：全局</li><li>w /path/to/somefile：将替换成功的结果保存至指定文件中；</li><li>p：显示替换成功的行；</li></ul><p>练习1：删除/boot/grub/grub2.cfg文件中所有以空白字符开头的行的行首的所有空白字符；</p><p>sed ‘s@^[[:space:]]+@@’ /boot/grub2/grub.cfg </p><p>练习2：删除/etc/fstab文件中所有以#开头的行的行首的#号以及#号后面的所有空白字符；</p><p>sed ‘s@^#[[:space:]]*@@’ /etc/fstab</p><p>练习3：输出一个绝对路径给sed，取出其目录，其行为类似dirname</p><p>echo “/var/log/messages” | sed ‘s@[^/]+?$@@’</p><p>echo “/var/log/messages/“ | sed -r ‘s@[^/]+/?$@@’</p><p>高级编辑命令：</p><ul><li>h：把模式空间中的内容覆盖至保持空间中；</li><li>H：把模式空间中的内容追加至保持空间中；</li><li>g：把保持空间中的内容覆盖至模式空间中；</li><li>G：把保持空间中的内容追加至模式空间中；</li><li>x：把模式空间中的内容与保持空间中的内容互换；</li><li>n：覆盖读取匹配到的行的下一行至模式空间中；</li><li>N：追加读取匹配到的行的下一行至模式空间中；</li><li>d：删除模式空间中的行；</li><li>D：删除多行模式空间中的使用行；</li></ul><p>示例：</p><p>​    sed -n ‘n;p’ /etc/fstab：显示偶数行；</p><p>​    sed ‘1!G;h;$!d’ file：逆序显示；</p><p>​    sed ‘$!N;$!D’ /etc/fstab :最后两行;</p><p>​    sed ‘/^$/d;G’ file：删除所有空白行，而后为每行后面加一个空白行</p><p>​    sed ‘n;d’ FILE：显示奇数行；</p><p>​    sed ‘G’ file：在原有的每行后面添加空白行，包括原来的空白行</p><p>注意：在任何修改系统关键配置文件的时候，记得要先做备份，而且要定期对/etc目录做备份</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文本处理三剑客：&lt;/p&gt;
&lt;p&gt;sed、awk、grep&lt;/p&gt;
&lt;p&gt;SED&lt;/p&gt;
&lt;p&gt;不处理源文件，每次读入一行到自己的工作空间（模式空间），处理完成之后输出至标准输出&lt;/p&gt;
&lt;p&gt;默认会处理所有行，我们可以指定让他处理匹配到的行&lt;/p&gt;
&lt;p&gt;因此；&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>11.yum实战进阶及shell脚本实现磁盘管理实战</title>
    <link href="http://yoursite.com/2020/05/31/11-yum%E5%AE%9E%E6%88%98%E8%BF%9B%E9%98%B6%E5%8F%8Ashell%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2020/05/31/11-yum%E5%AE%9E%E6%88%98%E8%BF%9B%E9%98%B6%E5%8F%8Ashell%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98/</id>
    <published>2020-05-31T20:27:24.000Z</published>
    <updated>2020-06-01T04:30:50.974Z</updated>
    
    <content type="html"><![CDATA[<p>常用的桌面环境：</p><p>windows7/8/10；</p><p>Gnome</p><p>KDE</p><p>XFCE4</p><p>CINEMON</p><p>YUM C/S架构模型</p><p>yum client（yum）</p><p>yum repository（ftp/http/https）</p><p>Bash 脚本编程</p><p>过程式编程语言的执行流程：</p><ul><li>顺序执行</li><li>选择执行</li><li>循环执行</li></ul><p>选择执行:</p><ul><li>&amp;&amp; ||</li><li>if</li><li>case</li></ul><p>if语句：三种格式</p><ul><li><p>单分支：</p><p>if condition；then</p><p>​    if-true-分支；</p><p>fi</p></li><li><p>双分支：、</p><p>if condition； then</p><p>​    if-true-分支</p><p>else</p><p>​    if-false分支</p><p>fi</p></li><li><p>多分支的if语句</p><p>if condition1；then</p><p>​    条件1为真分支；</p><p>elif condition2； then</p><p>​    条件2为真分支</p><p>elif condition3；then</p><p>​    条件3为真分支</p><p>…</p><p>elif conditionN； then</p><p>​    条件N为真分支</p><p>else</p><p>​    所有条件均不满足时的分支</p><p>fi</p></li><li><p>注意：即使多个条件可能同时都会满足，分支只会选择执行其中一个，首先测试为“真”；</p></li></ul><p>case 相当于一个简化版本的多分支if语句，但并不是所有的多分支if语句都可以转化为case语句；</p><p>示例：脚本参数传递一个文件路径给脚本，判断此文件的类型；</p><p>练习：写一个脚本：</p><ol><li>传递一个参数给脚本，此参数为用户名；</li><li>根据ID号判断用户类型：<ul><li>0：管理员</li><li>1-999 系统用户</li><li>1000+ 登录用户</li></ul></li></ol><p>循环执行：将一段代码重复执行0、1或多次；</p><p>进入条件：条件满足时才进入循环；</p><p>退出条件：每个循环都应该有退出条件，以有机会退出循环；</p><ul><li>for循环</li><li>while循环</li><li>until循环</li></ul><p>for循环</p><ul><li>遍历列表</li><li>控制变量</li></ul><p>for VARAIBLE in LIST；do</p><p>​    循环体</p><p>done</p><p>进入条件：只要列表有元素，即可进入循环；把列表中的元素挨个赋值给变量，每个来一遍；</p><p>退出条件：列表中的元素遍历完成；</p><p>LIST的生成：</p><ol><li>直接给出；</li><li>整数列表；<ul><li>{start..end}；（两个英文句号）</li><li>seq [start [incremtal]] last</li></ul></li><li>返回列表的命令；</li><li>glob</li><li>变量引用</li></ol><p>示例1，判断/var/log下文件类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 1 <span class="comment">#!/bin/bash</span></span><br><span class="line"> 2 <span class="keyword">for</span> file <span class="keyword">in</span> /var/<span class="built_in">log</span>/*;<span class="keyword">do</span></span><br><span class="line"> 3     <span class="keyword">if</span> [ -f <span class="variable">$file</span> ];  <span class="keyword">then</span></span><br><span class="line"> 4         <span class="built_in">type</span>=<span class="string">"Regular file."</span></span><br><span class="line"> 5     <span class="keyword">elif</span> [ -d <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line"> 6         <span class="built_in">type</span>=<span class="string">"Directory."</span></span><br><span class="line"> 7     <span class="keyword">elif</span> [ -L <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line"> 8         <span class="built_in">type</span>=<span class="string">"Symbolic link."</span></span><br><span class="line"> 9     <span class="keyword">elif</span> [ -b <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line">10         <span class="built_in">type</span>=<span class="string">"Special file."</span></span><br><span class="line">11     <span class="keyword">fi</span></span><br><span class="line">12     <span class="built_in">echo</span> <span class="string">"<span class="variable">$file</span>  <span class="variable">$type</span>"</span></span><br><span class="line">13 <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>练习：</p><ol><li><p>分别求100以内所有偶数之和，以及所有奇数之和；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> 1 <span class="comment">#!/bin/bash</span></span><br><span class="line"> 2 <span class="comment"># 计算100以内的奇数和和偶数和</span></span><br><span class="line"> 3 <span class="built_in">declare</span> i jsum=1 osum=2</span><br><span class="line"> 4 <span class="keyword">for</span> i <span class="keyword">in</span> &#123;3..100&#125;;<span class="keyword">do</span></span><br><span class="line"> 5     <span class="keyword">if</span> [ $[<span class="variable">$i</span>%2] -eq 0 ]; <span class="keyword">then</span></span><br><span class="line"> 6         osum=$[<span class="variable">$osum</span>+<span class="variable">$i</span>]</span><br><span class="line"> 7     <span class="keyword">else</span></span><br><span class="line"> 8         jsum=$[<span class="variable">$jsum</span>+<span class="variable">$i</span>]</span><br><span class="line"> 9     <span class="keyword">fi</span></span><br><span class="line">10 <span class="keyword">done</span></span><br><span class="line">11 <span class="built_in">echo</span> <span class="string">"奇数之和=<span class="variable">$jsum</span>."</span></span><br><span class="line">12 <span class="built_in">echo</span> <span class="string">"偶数之和=<span class="variable">$osum</span>."</span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>计算当前系统上的所有用的id之和;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> 1 <span class="comment">#!/bin/bash</span></span><br><span class="line"> 2 <span class="comment"># 计算系统上所有id之和</span></span><br><span class="line"> 3 <span class="built_in">declare</span> i idsum=0</span><br><span class="line"> 4 users=$(cat /etc/passwd | cut -d: -f1)</span><br><span class="line"> 5 <span class="comment">#echo $users</span></span><br><span class="line"> 6 <span class="keyword">for</span> user <span class="keyword">in</span> <span class="variable">$users</span>;<span class="keyword">do</span></span><br><span class="line"> 7     uid=$(id -u <span class="variable">$user</span>)</span><br><span class="line"> 8     idsum=$[<span class="variable">$idsum</span>+<span class="variable">$uid</span>]</span><br><span class="line"> 9 <span class="keyword">done</span></span><br><span class="line">10 <span class="built_in">echo</span> <span class="string">"id之和: <span class="variable">$idsum</span>"</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>通过脚本参数传递一个目录给脚本，而后计算此目录下所有文本文件的行数之和，并说明此类文件的总数；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  1 <span class="comment">#!/bin/bash</span></span><br><span class="line">  2 <span class="comment"># 通过脚本参数传递一个目录给脚本，而后计算此目录下所有文本文件的行数之和，并说明此文件的总数</span></span><br><span class="line">  3 </span><br><span class="line">  4 [ <span class="variable">$#</span> -eq 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"Need a parament."</span> &amp;&amp; <span class="built_in">exit</span> 1</span><br><span class="line">  5 ! [ -d <span class="variable">$1</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"Need a directory"</span> &amp;&amp; <span class="built_in">exit</span> 2</span><br><span class="line">  6 </span><br><span class="line">  7 <span class="built_in">declare</span> -i linesum=0</span><br><span class="line">  8 <span class="built_in">declare</span> -i filesum=0</span><br><span class="line">  9 files=$(ls <span class="variable">$1</span>)</span><br><span class="line"> 10 <span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line"> 11 <span class="keyword">for</span> file <span class="keyword">in</span> <span class="variable">$files</span>;<span class="keyword">do</span></span><br><span class="line"> 12     <span class="keyword">if</span> [ -f <span class="variable">$file</span> ]; <span class="keyword">then</span></span><br><span class="line"> 13         line=$(wc -l <span class="variable">$file</span> | cut -d<span class="string">' '</span> -f1)</span><br><span class="line"> 14         linesum=$[<span class="variable">$linesum</span>+<span class="variable">$line</span>]</span><br><span class="line"> 15         <span class="built_in">let</span> filesum++</span><br><span class="line"> 16     <span class="keyword">fi</span></span><br><span class="line"> 17 <span class="keyword">done</span></span><br><span class="line"> 18 <span class="built_in">echo</span> <span class="string">"行数之和: <span class="variable">$linesum</span>"</span></span><br><span class="line"> 19 <span class="built_in">echo</span> <span class="string">"文件总数: <span class="variable">$filesum</span>"</span></span><br><span class="line">~</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;常用的桌面环境：&lt;/p&gt;
&lt;p&gt;windows7/8/10；&lt;/p&gt;
&lt;p&gt;Gnome&lt;/p&gt;
&lt;p&gt;KDE&lt;/p&gt;
&lt;p&gt;XFCE4&lt;/p&gt;
&lt;p&gt;CINEMON&lt;/p&gt;
&lt;p&gt;YUM C/S架构模型&lt;/p&gt;
&lt;p&gt;yum client（yum）&lt;/p&gt;
&lt;p&gt;yum r
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>10.Linux软件包管理yum工具介绍</title>
    <link href="http://yoursite.com/2020/05/31/10-Linux%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86yum%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2020/05/31/10-Linux%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86yum%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-05-31T20:27:17.000Z</published>
    <updated>2020-06-01T04:30:37.605Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux程序包管理"><a href="#Linux程序包管理" class="headerlink" title="Linux程序包管理"></a>Linux程序包管理</h1><p>rpm在安装包时需要解决依赖关系，手动解决比较麻烦，所以依赖于前端工具自动解决依赖关系，所以YUM应运而生，最新的为DNF，fedora22引入，CentOS7（安装之后也可以使用）以上可用。</p><p>YUM接受命令后，通过配置文件访问源地址，URL（同一资源定位符）；</p><p>访问远程服务器主机，服务器提供程序包仓库，放了每一个程序包的名字，版本，依赖关系；</p><p>(rpm包的户口簿)，分析已安装的包和未安装的包，然后下载需要下载的包，缓存到本地。安装完之后会删除安装包，但源数据会被缓存本地，以后访问会访问本地的源数据去分析，源数据需要偶尔更新。（每次去请求源数据）</p><p>源较多，选择最快的即可；</p><p>镜像列表（使用互联网的或者自建仓库）；</p><p>将远程的镜像到本地；</p><p>YUM依赖于RPM而存在，只是一个前端工具；</p><p>FTP、HTTP</p><p>CREATEREPO</p><p>程序包分组</p><p>YUM（Yellowdog Updater, Modified）；是一个基于<a href="https://zh.wikipedia.org/wiki/RPM" target="_blank" rel="noopener">RPM</a>包管理的字符前端软件包管理器。能够从指定的服务器自动下载RPM包并且安装，可以处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。被<a href="https://zh.wikipedia.org/wiki/Yellow_Dog_Linux" target="_blank" rel="noopener">Yellow Dog Linux</a>本身，以及<a href="https://zh.wikipedia.org/wiki/Fedora" target="_blank" rel="noopener">Fedora</a>、<a href="https://zh.wikipedia.org/wiki/Red_Hat_Enterprise_Linux" target="_blank" rel="noopener">Red Hat Enterprise Linux</a>采用。</p><p>YUM repository：yum repo    /etc/yum.conf</p><p>存储了众多rpm包，以及包的相关的元数据文件（放于特定目录下，repodata）；</p><p>文件服务器：</p><ul><li>FTP://</li><li>HTTP://</li><li>nfs://</li><li>file:///</li></ul><p>yum 客户端：</p><ul><li>配置文件：<ul><li>/etc/yum.conf    ：为所有仓库提供的公共配置</li><li>/etc/yum.repos.d/*.repo ：为仓库的指向提供配置</li></ul></li></ul><table><thead><tr><th><code>cachedir</code></th><th>用于存储下载的软件包的目录。</th></tr></thead><tbody><tr><td><code>debuglevel</code></td><td>日志记录级别，从0（无）到10（全部）。</td></tr><tr><td><code>exactarch</code></td><td>如果设置为1，则仅更新软件包以使用正确的体系结构。</td></tr><tr><td><code>exclude</code></td><td>用空格分隔的要从安装或更新中排除的软件包列表，例如： <code>exclude=VirtualBox-4.? kernel*</code>。</td></tr><tr><td><code>gpgcheck</code></td><td>如果设置为1，则通过检查GPG签名来验证软件包的真实性。<code>gpgcheck</code>如果软件包是未签名的，则可能需要将其设置 为0，但应注意该软件包可能已被恶意更改。</td></tr><tr><td><code>gpgkey</code></td><td>GPG公钥文件的路径名。</td></tr><tr><td><code>installonly_limit</code></td><td>任何一个软件包可以安装的最大版本数。</td></tr><tr><td><code>keepcache</code></td><td>如果设置为0，请在安装后删除软件包。</td></tr><tr><td><code>logfile</code></td><td>yum日志文件的路径名。</td></tr><tr><td><code>obsoletes</code></td><td>如果设置为1，则在升级过程中更换过时的软件包。</td></tr><tr><td><code>plugins</code></td><td>如果设置为1，则启用扩展<strong>yum</strong>功能的插件。</td></tr><tr><td><code>proxy</code></td><td>代理服务器的URL，包括端口号。</td></tr><tr><td><code>proxy_password</code></td><td>使用代理服务器进行身份验证的密码。</td></tr><tr><td><code>proxy_username</code></td><td>使用代理服务器进行身份验证的用户名。</td></tr><tr><td><code>reposdir</code></td><td><strong>yum</strong>应该 在其中查找带有<code>.repo</code> 扩展名的存储库文件的目录。默认目录为 <code>/etc/yum.repos.d</code>。</td></tr></tbody></table><p>仓库的定义：</p><ul><li>[repositoryID]</li><li>name=Some name for this repository</li><li>baseurl=url://path/to/repository/</li><li>enable={1|0}</li><li>gpgcheck={1|0}</li><li>gpgkey=URL</li><li>enablegroups={1|0}</li><li>failovermethod={}</li><li>cost=（默认1000）</li></ul><p>YUM</p><ul><li>yum repolist ：显示仓库列表，默认仅显示启用的，显示未启用的(yum repolist disabled);</li><li>yum list {all | updates|available|installed|glob_exp1}</li><li>yum install ：安装程序包,后面直接跟上packagename，一次可安装多个,可选择版本安装，默认安装最新的版本；</li><li>yum update ：升级指定程序包</li><li>check-update ：检查升级；</li><li>info […] ：查看程序包的详细信息；</li><li>remove | erase package1 [package2] […] ：卸载包;</li><li>provides | whatprovides feature1 [feature2] […] ：查看包提供的特性（可以是某文件）是有哪个程序包提供;</li><li>clean [ packages | metadata | expire-cache | rpmdb | plugins | all ] ：清理本地缓存</li><li>makecache ：创建缓存；</li><li>search string1 [string2] […] ：根据指定的关键字搜索包名及summary信息;</li><li>reinstall package1 [package2] […]：重新安装，覆盖的方式安装；</li><li>downgrade package1 [package2] […]：降级安装;</li><li>deplist package1 [package2] […] ：依赖关系分析；查看指定包所依赖的capabilities；</li><li>version [ all | installed | available | group-* | nogroups* | grouplist | groupinfo ] ：查看版本信息；</li><li>history    [info|list|packages-list|packages-info|summary|addon-info|redo|undo|roll‐back|new|sync|stats] :查看YUM事务历史；</li><li>localinstall rpmfile1 [rpmfile2] […] ：安装本地rpm文件；可使用仓库的依赖关系解决；（已经废弃，直接使用install，update即可）;</li><li>groups […] ：包组相关命令；{info | install | list | remove | summary}；groupinfo,groupinstall,groupupdate,groupremove,grouplist;</li></ul><p>TIPS：YUM可使用新版本的源，不能使用老版本的，比如6.0可使用6.1的，但是不能使用5.9的；</p><p>使用本地YUM源</p><p>使用本地光盘作为本地yum仓库:</p><ol><li>挂载光盘至某目录；</li><li>创建配置文件；<ul><li>[CentOS7]</li><li>name=</li><li>baseurl=</li><li>gpgcheck=</li><li>enabled=</li></ul></li></ol><p>YUM的命令行命令优先级高于配置文件；命令行选项：</p><ul><li>–nogpgcheck：禁止进行gpgcheck；</li><li>-y ：自动回答yes；</li><li>-q ：静默模式；</li><li>–disablerepo=repoidglob ：临时禁用此处指定的repo；</li><li>–enablerepo=repoidglob ：临时启用此处指定的repo；</li><li>–noplugins : 临时禁用所有插件</li></ul><p>YUM的repo配置文件中可使用的变量；</p><ul><li>把远程服务器上所有访问路径固定下来，用变量来获取当前版本号，平台架构；</li><li>$releaserver ：当前OS的发行版的版本号；</li><li>$ARCH ：平台；</li><li>$basearch ：基础平台；</li><li>$YUM0~YUM9</li></ul><p>创建YUM仓库</p><ul><li>必须先安装这个createrepo程序包；</li><li>createrepo [option] &lt;directory&gt;</li></ul><p>程序包编译安装：</p><ul><li>testapp-Version-release.src.rpm –&gt; 安装后，使用rpmbuild命令制作成二进制格式的rpm包，而后再安装；</li><li>源代码 –&gt; 预处理 –&gt; 编译（GCC） –&gt; 汇编 – &gt; 链接 –&gt; 执行</li><li>源代码组织格式：<ul><li>多文件，文件中的代码之间，可能存在跨文件依赖关系；</li><li>C、C++ ：make（Configure –&gt; Makefile.in –&gt; makefile）项目管理工具，依赖编译器去编译程序；</li><li>JAVA ：maven</li></ul></li></ul><p>编译安装三步骤：</p><ul><li><p>./configure:</p><ol><li>通过选项传递参数，指定启用特性、安装路径等、执行时会参考用户的指定以及Makefile.in 文件生成makefile；</li><li>检查依赖的外部环境；</li></ol></li><li><p>make</p><p>根据makefile文件，构建应用程序；</p></li><li><p>make install</p></li></ul><p>开发工具：</p><ul><li>autoconf：结合配置文件生成configure脚本</li><li>automake：结合配置文件生成Makefile.in文件</li></ul><p>建议：安装之前，阅读INSTALL文件，如果没有，阅读README文件；</p><p>开源程序源代码的获取：</p><ol><li>官方网站；官方自建站点</li><li>代码托管网站：<ul><li>Github</li><li>Gitlab</li><li>GoogleCode</li><li>SourceForge</li><li>Gitee 码云</li></ul></li></ol><p>C、C++：GCC（GNU C Complier）（早期也被称作CC）</p><p>编译C源代码：</p><ul><li><p>前提要提供开发工具和开发环境；</p><ul><li>开发工具：make gcc</li><li>开发环境：开发库，头文件</li><li>glibc：标准库</li><li>通过 ”包组“ 提供开发组件：<ul><li>CentOS6：Development Tool</li><li>CentOS7：Development and Creative Workstation</li><li>Debian系列：build-essential</li></ul></li></ul></li><li><p>第一步：configure脚本</p><ul><li><p>选项：指定安装位置，指定启用的特性；</p></li><li><p>–help：获取其支持使用的选项</p><ul><li><p>安装路径设定：–prefix=/path/to/somewhere ：指定安装位置；</p></li><li><p>配置文件安装位置：–sysconfdir=/PATH/to/somewhere;</p></li><li><p>System Types:</p></li><li><p>Optional features :可选特性；</p><ul><li>–disable-feature</li><li>–enable-feature[=ARG]</li></ul></li><li><p>Optional Packages:可选包</p><ul><li>–with-PACKAGE[=ARG]</li><li>–without-PACKAGE</li></ul></li></ul></li></ul></li></ul><ul><li><p>make </p></li><li><p>make install</p></li></ul><p>安装后的配置</p><ol><li><p>导出二进制程序目录至PATH变量中；</p><ul><li>编辑/etc/profile.d/NAME.sh<ul><li>export PATH=/PATH/TO/BIN:PATH</li></ul></li></ul></li><li><p>导出库文件路径</p><p>编辑/etc/ld.so.conf.d/NAME.conf</p><p>添加新的库文件到此处；</p><p>让系统重新生成缓存 ldconfig [-v]</p></li><li><p>导出头文件</p><p>ln -sv</p></li><li><p>导出帮助手册</p><p>编辑/etc/man.config</p><p>添加一条manpath</p></li></ol><p>练习：</p><ol><li>YUM的配置和使用：包括yum repository的创建；</li><li>编译安装apache 2.2；启动此服务；</li><li>程序包管理，rpm、yum、编译</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux程序包管理&quot;&gt;&lt;a href=&quot;#Linux程序包管理&quot; class=&quot;headerlink&quot; title=&quot;Linux程序包管理&quot;&gt;&lt;/a&gt;Linux程序包管理&lt;/h1&gt;&lt;p&gt;rpm在安装包时需要解决依赖关系，手动解决比较麻烦，所以依赖于前端工具自动解
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>9.任务计划crontab及企业常用操作</title>
    <link href="http://yoursite.com/2020/05/31/9-%E4%BB%BB%E5%8A%A1%E8%AE%A1%E5%88%92crontab%E5%8F%8A%E4%BC%81%E4%B8%9A%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2020/05/31/9-%E4%BB%BB%E5%8A%A1%E8%AE%A1%E5%88%92crontab%E5%8F%8A%E4%BC%81%E4%B8%9A%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</id>
    <published>2020-05-31T20:27:09.000Z</published>
    <updated>2020-06-01T04:30:14.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-任务计划、周期性任务执行"><a href="#Linux-任务计划、周期性任务执行" class="headerlink" title="Linux 任务计划、周期性任务执行"></a>Linux 任务计划、周期性任务执行</h1><p>未来的某个时间点执行以此某任务：at，batch</p><p>周期性运行某任务：crontab</p><p>执行结果：会通过邮件发送给用户</p><p>这个邮件只用于本机，以及本机各用户之间</p><p>/var/spool/mail/USER</p><p>用户的邮箱</p><p>ss -ntlp</p><p>master 进程属于postfix进程负责监听的，为本地主机个用户之间传递邮件用的</p><p><strong>本地电子邮件服务：</strong></p><p>smtp： simple mall transmission protocol</p><p>pop3：post office protocol</p><p>imap4：Internet mall access protocol</p><p><strong>mail命令</strong></p><p>mailx - send and receive Internet mall</p><p>MUA：mall USer Agent 用户收发邮件的工具程序</p><p>mailx [-s SUBJECT] USERNAME@[HOSTNAME]</p><p>mail不带任何命令表示收邮件</p><p>输入邮件编号即可查看邮件</p><p>subject：标题</p><p>hostname：在发给本机用户时可省略</p><p>content-type:正文内容</p><p>from：谁发的</p><p>to：发给谁</p><p>DAte：时间</p><p>user-agent：用什么程序发的；</p><p><strong>示例：</strong></p><p>mail -s “fstab file” root &lt; /etc/fstab</p><p>cat /etc/fstab | mail -s “fstab file” centos</p><p>邮件正文的输入：</p><p>1：交互式输入：单独成行可以表示正文结束，ctrl+d 提交亦可</p><p>2：输入重定向</p><p>3：通过管道</p><h2 id="AT命令："><a href="#AT命令：" class="headerlink" title="AT命令："></a>AT命令：</h2><p>at [OPTION]… TIME</p><p>at now+2min</p><p>at&gt;直接输入你要执行的命令</p><p>ctrl+d提交</p><p>at -l 显示任务队列</p><p>at的作业有队列，用单个字母表示，默认都使用a队列；</p><p>常用选项：</p><p>-l 查看作业队列，相当于atq</p><p>-f /path/from/somefile 从文件读入作业任务，而不用再交互式输入</p><p>-d 删除任务队列，相当与atrm</p><p>-c 查看指定作业的具体内容；</p><p>-q queue：指明队列；</p><p>注意，作业执行结果是以邮件发给提交作业的用户；</p><h2 id="batch"><a href="#batch" class="headerlink" title="batch"></a>batch</h2><p>batch会让系统自行选择在系统资源空闲的时间去执行指定的任务；其他与at相同</p><h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><p>周期性执行任务</p><p>cron机制：</p><p>服务程序：</p><p>cronle：主程序包，提供了crond守护进程及相关辅助工具；</p><p>systemctl status crond</p><p>service crond status</p><p>向crond提交作业的方式不同于at，它需要使用专用的配置文件，此文件有固定的格式，不建议使用文本编辑器直接编辑此文件；需要使用crontab命令；</p><p>cron任务分为2类：</p><h4 id="系统cron任务：主要用于实现系统自身的维护；"><a href="#系统cron任务：主要用于实现系统自身的维护；" class="headerlink" title="系统cron任务：主要用于实现系统自身的维护；"></a>系统cron任务：主要用于实现系统自身的维护；</h4><p>手动编辑：/etc/crontab 文件</p><p>用户cron任务：</p><p>命令：crontab命令</p><p>SHELL=/bin/bash<br>PATH=/sbin:/bin:/usr/sbin:/usr/bin<br>MAILTO=root</p><p>For details see man 4 crontabs</p><p>Example of job definition:</p><p>.—————- minute (0 - 59)</p><p>|  .————- hour (0 - 23)</p><p>|  |  .———- day of month (1 - 31)</p><p>|  |  |  .——- month (1 - 12) OR jan,feb,mar,apr …</p><p>|  |  |  |  .—- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</p><p>|  |  |  |  |</p><ul><li><ul><li><ul><li><ul><li><ul><li>user-name  command to be executed</li></ul></li></ul></li></ul></li></ul></li></ul><p><strong>注意：</strong></p><p>1.每一行定义一个周期性任务；</p><ul><li><ul><li><ul><li><ul><li><ul><li>定义周期性时间</li><li>user-name 运行任务的用户身份</li><li>command to be excuted 任务，最好使用程序的绝对路径</li></ul></li></ul></li></ul></li></ul></li></ul><p>2.此处的环境变量不同与用户登陆后获得的环境，因此，建议命令使用绝对路径，或者自定义PATH变量</p><p>3.执行结果会以邮件的形式mailto指定的用户</p><h4 id="用户cron的配置格式：-var-spool-cron-USERNAME"><a href="#用户cron的配置格式：-var-spool-cron-USERNAME" class="headerlink" title="用户cron的配置格式：/var/spool/cron/USERNAME"></a>用户cron的配置格式：/var/spool/cron/USERNAME</h4><p><strong>注意：</strong></p><p>1.每行定义一个cron任务，共6个字段；</p><p>2.此处的环境变量不同与用户登陆后获得的环境，因此，建议命令使用绝对路径，或者自定义PATH变量</p><p>3.执行结果会以邮件的形式发给当前用户</p><h3 id="时间表示法："><a href="#时间表示法：" class="headerlink" title="时间表示法："></a>时间表示法：</h3><p>1.特定表示法；</p><p>给定时间点有效取值范围的值；</p><p>注意：day of week 和day of month 一般不同时使用；</p><p>2.* 给定时间点上有效取值范围内的所有值；min（0-59），每分，每小时</p><p>3.离散取值法：在给定时间点上使用逗号分割的多个值；</p><p>#，#，#</p><p>4.连续取值： -</p><p>在时间点上使用-连接开头和结束</p><p>#-#</p><p>5 在指定时间点上，定义步长；</p><p>*/# :# 及步长</p><p><strong>注意：</strong></p><p>1.指定时间点不能被步长整除时，其意义将不复存在；</p><p>2.最小单位为 <code>分钟</code> ，想完成 <code>秒</code>级任务，需要额外借助于其他机制；</p><p>定义每分钟任务：而在利用脚本实现在每分钟之内，循环执行多次；</p><p><strong>示例：</strong></p><p>1.3 * * * * ：每小时执行一次；每小时的第3分钟；</p><p>2.3 4 * * 5 : 每周执行一次；每周5的4点3分；</p><p>3.5 6 7 * * ：每月执行一次，每月的7号的6点5分；</p><p>4.7 8 9 10 * ：每年执行一次；每年的10月9号8点7分</p><p>5.9 8 * * 3,7 ：每周三和周日；8点9分</p><p>6.* 8,20 * * 3,7 ; 每周三和周日的8点和20点各执行一次；</p><p>7.0 9-18 * * 1-5：周一到周五的9-18点，工作日的每小时；</p><p>8.*/5 * * * * ：每5分钟执行一次；</p><p>9.*/7 * * * * :</p><h3 id="crontab命令："><a href="#crontab命令：" class="headerlink" title="crontab命令："></a>crontab命令：</h3><p>crontab [-u user] [-l | -r | -e] [-i] [-s]</p><p>-e 编辑任务；</p><p>-l 列出所有任务</p><p>-r 移除所有任务；即删除/var/spool/cron/USERNAME文件；</p><p>-i 在使用-r选项移除所有任务时提示用户确认；</p><p>-u user：root用户可指定为某个用户编辑任务；</p><p><strong>注意</strong>：运行结果以邮件通知给当前用户；如果拒绝接受邮件：</p><p>1.command &gt;/dev/null</p><p>2.command &amp;&gt; /dev/null</p><p><strong>(确保正常执行再加/dev/null，否则就悲剧了)</strong></p><p>注意：定义command，如果命令需要用到%，需要对其转义；但放置于单引号中的%不用转义亦可；</p><p>某任务在指定的时间因关机未能执行，下次开机会不会自动执行？</p><p>不会！！</p><p>如果期望某时间因故未能按时执行，下次开机后无论是否到了时间点都要执行一次，可用anacron实现；</p><p>课外作业：anacron及其应用；</p><p>练习：</p><p>1.每12个小时备份一个/etc 目录至/backup 目录中，保存文件格式为“etc-yyyy-mm-dd-hh.tar.xz”;</p><p>2.每周2,4,7备份/var/log/secure 文件至/logs目录中，文件名格式为 “secure-yyyymmdd”;</p><p>3.每两小时取出当前系统/proc/meminfo文件中以S或M开头的行信息追加到/tmp/meminfo.txt文件中；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux-任务计划、周期性任务执行&quot;&gt;&lt;a href=&quot;#Linux-任务计划、周期性任务执行&quot; class=&quot;headerlink&quot; title=&quot;Linux 任务计划、周期性任务执行&quot;&gt;&lt;/a&gt;Linux 任务计划、周期性任务执行&lt;/h1&gt;&lt;p&gt;未来的某个时
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>8.Linux程序包管理</title>
    <link href="http://yoursite.com/2020/05/31/8-Linux%E7%A8%8B%E5%BA%8F%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/05/31/8-Linux%E7%A8%8B%E5%BA%8F%E5%8C%85%E7%AE%A1%E7%90%86/</id>
    <published>2020-05-31T20:27:01.000Z</published>
    <updated>2020-06-01T04:30:01.518Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux程序包管理"><a href="#Linux程序包管理" class="headerlink" title="Linux程序包管理"></a>Linux程序包管理</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>软件层    shell（人机交互接口）</p><p>//        \\</p><p>lib call(库调用)</p><p>//                    \\</p><p>system call(系统调用)]</p><p>//                        \\</p><p>底层硬件</p><p><strong>API：Application Program Interface</strong></p><p>API函数库是连接用户软件和系统内核桥梁，或者是“协议”，操作系统厂商写好函数库说明书，应用软件开发者不必关心其内部是如何实现的，用的时候对照着API手册查询就够了；应用软件也可以越过系统函数库通过system call（系统调用）直接调用os内核函数，如图中红色虚线所示，当然这种方式并不被推荐。</p><p>如果各系统平台都能提供相同的系统函数库，那么开发者在这个系统函数库基础之上编写软件代码，那么就很容易将软件移植到各个系统平台。然而，这只是个美好的愿望，IEEE就是为了达成这样的愿望才牵头制定POSIX标准。POSIX标准主要就是针对UNIX API而制订，不管函数如何包装、功能如何实现，但API按照标准约定来（比如函数变量等符号名称、数据结构、参数类型与个数、基本工具命令名称等），Linux完全兼容POSIX标准（部分函数符合POSIX，部分函数是Linux专有，即是POSIX的超集），微软声称Windows部分兼容POSIX标准。</p><p><strong>ABI：Application Binary Interface</strong></p><p>Unix-Like：ELF</p><p>Windows：exe，msi</p><h3 id="从软件角度理解系统"><a href="#从软件角度理解系统" class="headerlink" title="从软件角度理解系统"></a><strong>从软件角度理解系统</strong></h3><p>计算机世界里存在各种各样的操作系统，目前通用操作系统有主流的三大类：</p><ul><li>UNIX，通用操作系统鼻祖，发展出特别多衍生系统；</li><li>Windows，微软家根基，桌面市场霸主；</li><li>GNU/Linux，UNIX近亲，有各种发行版如Ubuntu、CentOS等。</li></ul><blockquote><p>“All problems in computer science can be solved by another level of indirection（计算机科学领域的任何问题都可以通过增加一个间接的中间层来解决）”。</p></blockquote><p>在硬件基础之上逐步堆叠了系统内核、系统函数库等中间层，在应用程序内部还可以继续细分多个层次，这样把最终用户与硬件隔离开来，增强了抽象能力、屏蔽底层细节，也让开发者分工，专注于各自层次的开发，同时降低了软件迁移的难度。</p><p>Cygwin就是在Windows中增加了一个中间层——兼容POSIX的模拟层，并在此基础上构建了大量Linux-like的软件工具。再来解释本文开头的回答，如下图，POSXI兼容环境包括以下两部分：</p><ul><li>cygwin1.dll，作为实现POSIX系统调用的模拟层，可原生运行在Windows中；</li><li>在cygwin1.dll之上构建的大量函数库、应用程序，如libc、zlib、bash、gcc、vim、awk、sed、git等等，与UNIX/Linux几乎等同*。</li></ul><p><em>*注：Cygwin的libc是Newlib，Linux的libc是GNU libc，UNIX有的是BSD libc。</em></p><h3 id="库级别的虚拟化"><a href="#库级别的虚拟化" class="headerlink" title="库级别的虚拟化"></a>库级别的虚拟化</h3><p>Linux：WinE</p><p>Windows：Cygwin</p><p><em>MinGW：MinGW，又称mingw32，是将GCC编译器和GNU Binutils移植到Win32平台下的产物，包括一系列头文件、库和可执行文件。 另有可用于产生32位及64位Windows可执行文件的MinGW-w64项目，是从原本MinGW产生的分支。如今已经独立发展。</em></p><p><strong>系统级开发</strong>：(注重性能)</p><p>C/C++ :httpd,vsftpd,nginx</p><p>新的热门语言：Go</p><p><strong>应用级开发</strong>:</p><p>Java/Python/Perl/Ruby/Php</p><p>java：hadoop，hbase    （jvm）</p><p>python：openstack    （pvm）</p><p>perl：（perl解释器）</p><p>ruby：（ruby解释器）</p><p>php：（php解释器）</p><p>高级语言，开发周期端，性能不如C，库多，代码量少</p><p>标准C库</p><h3 id="程序格式："><a href="#程序格式：" class="headerlink" title="程序格式："></a>程序格式：</h3><p><strong>源代码</strong>：文本格式的程序代码；</p><p>​        编译开发环境：编译器、头文件、开发库</p><p><strong>二进制格式</strong>：文本格式的程序代码–&gt;二进制格式–&gt;（二进制程序、库文件、配置文件、帮助文件）</p><p><strong>java/python程序格式：</strong></p><p>源代码：编译成能够在其虚拟机（jvm/pvm）运行的格式；</p><p>​        开发环境：编译器，开发库、导入的库（跟头文件实现功能相同）</p><p>二进制</p><p><strong>项目构建工具：</strong></p><p>C/C++：make</p><p>Java：maven</p><h2 id="程序包管理器"><a href="#程序包管理器" class="headerlink" title="程序包管理器"></a>程序包管理器</h2><p>源代码 –&gt; 目标二进制代码 –&gt; 组织成为一个或者有限几个<code>包</code>文件;</p><p>安装、升级、卸载、查询、校验</p><p><strong>程序包管理器：</strong></p><p>​        Debian：dpt，dpkg：“.deb”，</p><p>​        Redhat：redhat package manager，rpm：“rpm”；开始使用perl开发，后来C重写。</p><p>​        rpm事实上的工业标准；</p><p>​        SuSE：rpm，与红帽的组织格式不兼容，使用的rpm包管理器，“.rpm”</p><p>​        Gentoo：ports</p><p>​        Archlinux：pacman；</p><p>源代码：name-VERSION.tar.gz</p><p>Version：Major.minor.release</p><p>版本 –&gt;主版本号 –&gt; 次版本号 –&gt;</p><p>rpm包命名格式：</p><p>name-Version-release.arch.rpm</p><p>Version：major.minor.release</p><p>release.arch：rpm包的发行号</p><p>​        release.os.:2.el7.i386.rpm</p><p>​        archetecture:I386,X64(amd64),ppc,noarch（java，python之类的不依赖凭平台的）</p><p>redis-3.0.2-1.centos7.x64.rpm</p><p>changelog:版本更新历史；</p><p>i386（旧32位cpu），i686（较新32位cpu），x64/amd64（64位cpu）</p><p><strong>拆包</strong>：主包和支包</p><p>主包：name-version-release.arch.rpm</p><p>支包：name-function-version-release.arch.rpm</p><p>​        function：devel（开发版本），utils（工具程序），libs（库文件）</p><p><strong>组成格式</strong></p><p>Linux设计思想，小工具组合完成复杂任务；</p><p>包和包之间存在依赖关系：</p><p>X，Y，Z</p><p>X –&gt; Y，Z</p><p>​    Y –&gt;A，B，C</p><p>​    C –&gt; Y</p><p>前端工具（自动解决复杂依赖关系）：</p><p>YUM：rpm包的前端工具；</p><p>APT：deb包的前端工具；（apt-get）（apt-cache）</p><p>zypper：suse的rpm包管理工具；（比yum稍微好用）</p><p>dnf：fedora22+系统上rpm包管理器的前端工具；</p><p>前端工具（apt，yum）配合后端（rpm，deb）管理工具，能提升使用效率；</p><h4 id="程序包管理器："><a href="#程序包管理器：" class="headerlink" title="程序包管理器："></a><strong>程序包管理器：</strong></h4><p>功能：将编译好的应用程序的各组成文件打包成一个或者几个程序包文件，从而更方便的实现程序包的安装、升级、卸载和查询等管理操作；</p><p>1.程序包的组成清单（每个程序包都单独实现）；</p><p>​    文件清单</p><p>​    安装或卸载时运行的脚本；</p><p>2.数据库（公共）</p><p>​    程序包名称和版本；</p><p>​    依赖关系</p><p>​    功能说明；</p><p>​    安装生成的各文件的文件路径及校验码信息；</p><p>​    。。。</p><p>​    /var/lib/rpm</p><h4 id="获取程序包的途径："><a href="#获取程序包的途径：" class="headerlink" title="获取程序包的途径："></a>获取程序包的途径：</h4><p>1.系统发行版的光盘或者官方的文件服务器（或者镜像站点）：</p><p>2.项目的官方站点</p><p>3.第三方组织：</p><p>​    （a）EPEL</p><p>​    （b）搜索引擎</p><p>​        <a href="https://pkgs.org/" target="_blank" rel="noopener">https://pkgs.org/</a></p><p>​        <a href="https://rpmfind.net/" target="_blank" rel="noopener">https://rpmfind.net/</a></p><p>​        <a href="http://rpm.pbone.net/" target="_blank" rel="noopener">http://rpm.pbone.net/</a></p><p>​    </p><p>4.自己动手，丰衣足食</p><p>建议：检查其合法性</p><p>​    来源合法性；信任的组织发布的</p><p>​    程序包的完整性：检验MD5，SHA1</p><h4 id="CentOS系统上的rpm命令管理程序包："><a href="#CentOS系统上的rpm命令管理程序包：" class="headerlink" title="CentOS系统上的rpm命令管理程序包："></a>CentOS系统上的rpm命令管理程序包：</h4><p>安装、升级、卸载、查询和校验、数据库维护</p><h4 id="rpm命令："><a href="#rpm命令：" class="headerlink" title="rpm命令："></a>rpm命令：</h4><p>​    rpm [option] [Package_FILE]</p><p>​    安装： -i，–install</p><p>​    升级：-U，–update，-F，–freshen</p><p>​    卸载：-e，–erase</p><p>​    查询：-q，–query</p><p>​    校验：-V，–verify</p><p>​    数据库维护：–build，</p><p>​    </p><h4 id="安装：rpm-ivh（常用）"><a href="#安装：rpm-ivh（常用）" class="headerlink" title="安装：rpm -ivh（常用）"></a>安装：rpm -ivh（常用）</h4><p>rpm {-i|–install} [install-options] PACKAGE_FILE</p><p>install-options：</p><p>​    -v，verbose 详细信息</p><p>​    -vv，更详细的信息</p><p>​    -h hash marks输出进度条；每个#表示2%的进度；</p><p>​    –test ：测试安装：不安装文件，仅检查并报告依赖关系、冲突错误。</p><p>​    –nodeps：忽略依赖关系，安装完成之后不一定会可以使用。有些场景可使用。</p><p>​     rpm -ivh –replacepkgs：重新安装；</p><p>​    –justdb：不安装包，只更新数据库；</p><p>注意：rpm可以自带脚本：</p><p>4类：</p><p>​    preinstall：安装过程开始之前运行的脚本，%pre ，–nopre（跳过执行脚本）</p><p>​    postinstall：安装过程完成之后运行的脚本，%post ， –nopost</p><p>​    preuninstall：卸载过程真正开始执行之前运行的脚本；%preun， –nopreun</p><p>​    postuninstall：卸载过程完成之后运行的脚本，%postun， –nopostun</p><p>​    –noscripts（跳过执行所有脚本）</p><p>​    –nosignature    跳过检查包签名信息，即不检查来源合法性</p><p>​    –nodigest：不检查包完整性；</p><h3 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h3><p>rpm {-U|–upgrade} [install-options] PACKAGE_FILE …</p><p>rpm {-F|–freshen} [install-options] PACKAGE_FILE …</p><p>​    -U：升级或安装</p><p>​    -F：升级</p><p>​    rpm -Uvh PACKAGE_FILE…</p><p>​    rpm -Fvh PACKAGE_FILE…</p><p>​            –oldpackage：降级；</p><p>​            –force：强制升级；</p><p>注意：（1）不要对内核做升级操作；Linux支持多内核版本共存，因此，直接安装新版本内核即可；</p><p>​            （2）如果某原程序包的配置文件安装后曾被修改过，升级时，新版本的程序提供的同一个配置                                           文件不会覆盖原有版本的配置文件，而是把新版本的配置文件重命名（filename.rpmnew）后提供。</p><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><p>rpm {-e|–erase} [–allmatches] [–justdb] [–nodeps] [–noscripts]<br>           [–notriggers] [–test] PACKAGE_NAME …</p><p>​    –allmatches：卸载所有匹配指定名称的程序包的各版本；</p><p>​    –nodeps：忽略依赖关系；</p><p>​    –test：测试卸载，dry run模式（干跑）</p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>rpm {-q|–query} [select-options] [query-options]</p><p>select-options：</p><p>​    package_name：查询指定的包是安装，及其版本；</p><p>​    -a，–all：查询所有已安装的包</p><p>​    -f FILE：查询指定的文件由哪个程序包安装生成；</p><p>​    -g 查询指定包组包含哪些包；</p><p>​    -p，–package PACKAGE_FILE：用于实现对未安装的包执行查询操作；</p><p>​    –whatprovides CAPABILITY：查询指定的CAPABILITY由哪个程序包提供；</p><p>​    –whatrequires CAPABILITY：查询指定的CAPABILITY被哪个包依赖；</p><p>query-options：</p><p>​    –changelog ：查看更新历史</p><p>​    -c，–configfiles：列出程序包提供的配置文件</p><p>​    -l ，–list：列出程序包安装生成的所有文件列表</p><p>​    -i，–info：程序包相关的信息，版本号、大小、所属的包组、等；</p><p>​    -d，–docfiles：列出程序包提供的帮助文件列表</p><p>​    –provides：列出程序包提供的所有CAPABILITY；</p><p>​    –whatrequires：查询指定程序包被谁所依赖；</p><p>​    -R，–requires：查询指定程序包的依赖关系；</p><p>​    –scripts：查询程序包自带的脚本片段；</p><p>​    -ql PAKAGE，-qf FILE，-qc PACKAGE，-ql PACKAGE，-qd PACKAGE；</p><p>​    -qpi PACKAGE_FILE，-qpl PACKAGE_FILE，-qpc PACKAGE_FILE</p><h3 id="校验"><a href="#校验" class="headerlink" title="校验"></a>校验</h3><p>rpm {-V|–verify} [select-options] [verify-options]</p><pre><code> [--nodeps] [--nofiles] [--noscripts] [--nodigest] [--nosignature] [--nolinkto] [--nofiledigest] [--nosize] [--nouser] [--nogroup] [--nomtime] [--nomode] [--nordev] [--nocaps] [--noconfig] [--noghost]c %config configuration file.d %doc documentation file.g %ghost file (i.e. the file contents are not included in the package payload).l %license license file.r %readme readme file.S file Size differsM Mode differs (includes permissions and file type)5 digest (formerly MD5 sum) differsD Device major/minor number mismatchL readLink(2) path mismatchU User ownership differsG Group ownership differsT mTime differsP caPabilities differ</code></pre><h3 id="验证包来源合法性和完整性"><a href="#验证包来源合法性和完整性" class="headerlink" title="验证包来源合法性和完整性"></a>验证包来源合法性和完整性</h3><p><strong>来源合法性验证：</strong></p><p>​        数字签名：非对称加密</p><p>​    （计算特征码）–&gt;私钥加密特征码 –&gt;公钥解密验证（安全获得公钥）CA</p><p><strong>完整性验证：</strong></p><p>​        获取并导入信任的包的制作者的密钥；</p><p>​        对于centos发行版来说，导入光盘中的KEY文件</p><p>​        导入公钥： rpm –important RPM-GPG-KEY-CENTOS7</p><p><strong>验证：</strong></p><p>​        1.安装此组织签名的程序时，会自动执行验证；</p><p>​        2.手动验证：rpm -k PACKAGE_FILE</p><h3 id="数据库重建"><a href="#数据库重建" class="headerlink" title="数据库重建"></a>数据库重建</h3><p>rpm管理数据库路径：/var/lib/rpm</p><p>​        查询操作：通过此处的数据库进行；</p><p>获取帮助：</p><p>centos6：man rpm</p><p>centos7：man rpmdb</p><p>rpm {–initdb|–rebuilddb}</p><p>rpm {–initdb|–rebuilddb} [-v] [–dbpath DIRECTORY] [–root DIRECTORY]</p><p>​    –initdb：初始化数据库，当前无任何数据库可初始化创建一个新的，当前有时不执行任何操作；</p><p>​    –rebuilddb：重新构建，通过读取当前系统上的所有已安装过的数据包进行重建；</p><h2 id="Debian-全球镜像站"><a href="#Debian-全球镜像站" class="headerlink" title="Debian 全球镜像站"></a>Debian 全球镜像站</h2><p>主要 Debian 镜像站</p><table><thead><tr><th>中国大陆</th><th><a href="http://ftp2.cn.debian.org/debian/" target="_blank" rel="noopener">ftp2.cn.debian.org/debian/</a></th><th>amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x</th></tr></thead><tbody><tr><td>中国大陆</td><td><a href="http://ftp.cn.debian.org/debian/" target="_blank" rel="noopener">ftp.cn.debian.org/debian/</a></td><td>amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x</td></tr></tbody></table><p>次要 Debian 镜像站</p><table><thead><tr><th><strong>中国大陆</strong></th><th></th><th></th></tr></thead><tbody><tr><td>ftp2.cn.debian.org</td><td><a href="http://ftp2.cn.debian.org/debian/" target="_blank" rel="noopener">/debian/</a></td><td>amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x</td></tr><tr><td>ftp.cn.debian.org</td><td><a href="http://ftp.cn.debian.org/debian/" target="_blank" rel="noopener">/debian/</a></td><td>amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x</td></tr><tr><td>mirror.lzu.edu.cn</td><td><a href="http://mirror.lzu.edu.cn/debian/" target="_blank" rel="noopener">/debian/</a></td><td>ALL amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x</td></tr><tr><td>mirrors.163.com</td><td><a href="http://mirrors.163.com/debian/" target="_blank" rel="noopener">/debian/</a></td><td>amd64 i386</td></tr><tr><td>mirrors.bfsu.edu.cn</td><td><a href="http://mirrors.bfsu.edu.cn/debian/" target="_blank" rel="noopener">/debian/</a></td><td>ALL amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x</td></tr><tr><td>mirrors.huaweicloud.com</td><td><a href="http://mirrors.huaweicloud.com/debian/" target="_blank" rel="noopener">/debian/</a></td><td>ALL amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x</td></tr><tr><td>mirrors.tuna.tsinghua.edu.cn</td><td><a href="http://mirrors.tuna.tsinghua.edu.cn/debian/" target="_blank" rel="noopener">/debian/</a></td><td>amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x</td></tr><tr><td>mirrors.ustc.edu.cn</td><td><a href="http://mirrors.ustc.edu.cn/debian/" target="_blank" rel="noopener">/debian/</a></td><td>amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x</td></tr></tbody></table><h2 id="List-of-CentOS-Mirrors"><a href="#List-of-CentOS-Mirrors" class="headerlink" title="List of CentOS Mirrors"></a>List of CentOS Mirrors</h2><table><thead><tr><th>Asia</th><th align="left">Bangladesh</th><th><a href="http://www.colocity.com.bd/" target="_blank" rel="noopener">CoLoCity</a></th><th align="left"><a href="http://mirror.myfahim.com/centos/" target="_blank" rel="noopener">http://mirror.myfahim.com/centos/</a></th><th></th><th></th></tr></thead><tbody><tr><td>Asia</td><td align="left">Bangladesh</td><td><a href="http://www.dhakacom.com/" target="_blank" rel="noopener">dhakaCom Limited</a></td><td align="left"><a href="http://mirror.dhakacom.com/centos/" target="_blank" rel="noopener">http://mirror.dhakacom.com/centos/</a></td><td></td><td></td></tr><tr><td>Asia</td><td align="left">Bangladesh</td><td><a href="https://www.xeonbd.com/" target="_blank" rel="noopener">XeonBD</a></td><td align="left"><a href="http://mirror.xeonbd.com/centos/" target="_blank" rel="noopener">http://mirror.xeonbd.com/centos/</a></td><td></td><td></td></tr><tr><td>Asia</td><td align="left">Cambodia</td><td><a href="https://cambo.host/" target="_blank" rel="noopener">Cambo.Host Ltd</a></td><td align="left"><a href="http://mirror.cambo.host/centos/" target="_blank" rel="noopener">http://mirror.cambo.host/centos/</a></td><td></td><td><a href="rsync://mirror.cambo.host/centos/">rsync://mirror.cambo.host/centos/</a></td></tr><tr><td>Asia</td><td align="left">China</td><td><a href="http://www.aliyun.com/" target="_blank" rel="noopener">Alibaba Cloud Computing</a></td><td align="left"><a href="http://mirrors.aliyun.com/centos/" target="_blank" rel="noopener">http://mirrors.aliyun.com/centos/</a></td><td></td><td></td></tr><tr><td>Asia</td><td align="left">China</td><td><a href="http://global.bfsu.edu.cn/" target="_blank" rel="noopener">Beijing Foreign Studies University</a></td><td align="left"><a href="http://mirrors.bfsu.edu.cn/centos/" target="_blank" rel="noopener">http://mirrors.bfsu.edu.cn/centos/</a></td><td><a href="https://mirrors.bfsu.edu.cn/centos/" target="_blank" rel="noopener">https://mirrors.bfsu.edu.cn/centos/</a></td><td><a href="rsync://mirrors.bfsu.edu.cn/centos/">rsync://mirrors.bfsu.edu.cn/centos/</a></td></tr><tr><td>Asia</td><td align="left">China</td><td><a href="http://www.bit.edu.cn/" target="_blank" rel="noopener">Beijing Institute of Technology</a></td><td align="left"><a href="http://mirror.bit.edu.cn/centos/" target="_blank" rel="noopener">http://mirror.bit.edu.cn/centos/</a></td><td></td><td></td></tr><tr><td>Asia</td><td align="left">China</td><td><a href="http://lanunion.cqu.edu.cn/" target="_blank" rel="noopener">ChongQing University</a></td><td align="left"><a href="http://mirrors.cqu.edu.cn/CentOS/" target="_blank" rel="noopener">http://mirrors.cqu.edu.cn/CentOS/</a></td><td><a href="https://mirrors.cqu.edu.cn/CentOS/" target="_blank" rel="noopener">https://mirrors.cqu.edu.cn/CentOS/</a></td><td></td></tr><tr><td>Asia</td><td align="left">China</td><td><a href="http://www.cn99.com/" target="_blank" rel="noopener">CN99 Corp.</a></td><td align="left"><a href="http://mirrors.cn99.com/centos/" target="_blank" rel="noopener">http://mirrors.cn99.com/centos/</a></td><td></td><td></td></tr><tr><td>Asia</td><td align="left">China</td><td><a href="http://www.neusoft.edu.cn/" target="_blank" rel="noopener">Dalian Neusoft University of Information</a></td><td align="left"><a href="http://mirrors.neusoft.edu.cn/centos/" target="_blank" rel="noopener">http://mirrors.neusoft.edu.cn/centos/</a></td><td></td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux程序包管理&quot;&gt;&lt;a href=&quot;#Linux程序包管理&quot; class=&quot;headerlink&quot; title=&quot;Linux程序包管理&quot;&gt;&lt;/a&gt;Linux程序包管理&lt;/h1&gt;&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerli
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>7.压缩工具与shell编程</title>
    <link href="http://yoursite.com/2020/05/31/7-%E5%8E%8B%E7%BC%A9%E5%B7%A5%E5%85%B7%E4%B8%8Eshell%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/05/31/7-%E5%8E%8B%E7%BC%A9%E5%B7%A5%E5%85%B7%E4%B8%8Eshell%E7%BC%96%E7%A8%8B/</id>
    <published>2020-05-31T20:26:54.000Z</published>
    <updated>2020-06-01T04:29:42.264Z</updated>
    
    <content type="html"><![CDATA[<p>压缩和解压缩<br>压缩比，越大压缩后的文件越小<br>压缩的目的：<br>时间换空间<br>CPU的时间：用CPU的运算时间换存储空间<br>当cpu空闲时可以执行压缩，一定要知道压缩的目的。<br>compress/uncompress: .Z<br>gzip/gunzip: .gz<br>bzip2/bunzip2: .bz<br>xz/unxz: .xz<br>zip/unzip<br>tar<br>cpio</p><p>1.gzip/gunzip :<br>    gzip/gunzip,zcat compress or expand files<br>    zcat可以查看小的压缩后的gz文件，大文件不要使用zcat查看<br>    gzip [option…] FILE…<br>    -d 解压缩，相当于gunzip;<br>    -# 指定压缩比，默认是6，越大越浪费cpu周期，一般默认即可；<br>    -c 输出至标准输出，不删除源文件；<br>        gzip -c files &gt; files.gz</p><ol start="2"><li>bzip2/bunzip2/zcat<br> -d 解压缩<br> -# 指定压缩比，默认6<br> -k 保留源文件<br> bzip2 [option]… FILE…</li></ol><p>3.xz/unxz/xzcat<br>lzma/unlzma/lzcat</p><pre><code>xz [option]... FILE...    -d 解压缩    -# 压缩比    -k 保留源文件</code></pre><p>这几种压缩工具都不支持对文件夹进行压缩，在linux上如果要压缩目录需要先归档；</p><p>归档 tar,cpio</p><p>tar 目录可以不加‘-’;<br>    tar [option]… FILE…<br>    1.创建归档 -c<br>        -c -f /PATH/to/FILE<br>        -cf<br>        cf</p><pre><code>2.展开归档 -x3.查看归档文件内的文件列表 -t4.指定目录 -C</code></pre><p>归档并压缩<br>-z：gzip<br>tar czf gzfile sourcefile…<br>解压缩<br>tar xzf gzfile<br>z可省略，会自动判断文件类型</p><p>-j:bzip2<br>-jcf<br>-jxf</p><p>-J :xz<br>-Jcf<br>-Jxf</p><p>zip</p><p>zip/unzip</p><p>.zip</p><p>zip file.zip file</p><p>lftp下载文件</p><p>lftp [url/ip]/path/to/file</p><p>lftp&gt;mget file</p><p>Bash 脚本编程之用户交互：</p><p>脚本参数</p><p>可以直接与用户交互</p><p>交互：通过键盘输入数据，从而完成变量复制操作；</p><p>灵活的执行方式实现有2种方法：</p><p>通过传入参数</p><p>尽量避免与用户交互</p><p>read内嵌命令</p><p>help read</p><p>read -p “message:” var</p><p>[ -z $name ] &amp;&amp; echo “name is needed.” &amp;&amp; exit 2</p><p>如空可自行赋值：</p><p>read -p “Enter name. [jack]:” name</p><p>[ -z $name ] &amp;&amp; name=’Tom’  </p><p>bash -n 检测语法错误</p><p>只能检查语法错误，逻辑错误无法检测</p><p>bash -x debug模式</p><p>按步执行,调试执行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;压缩和解压缩&lt;br&gt;压缩比，越大压缩后的文件越小&lt;br&gt;压缩的目的：&lt;br&gt;时间换空间&lt;br&gt;CPU的时间：用CPU的运算时间换存储空间&lt;br&gt;当cpu空闲时可以执行压缩，一定要知道压缩的目的。&lt;br&gt;compress/uncompress: .Z&lt;br&gt;gzip/gunz
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>6.Bash脚本编程</title>
    <link href="http://yoursite.com/2020/05/31/6-Bash%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/05/31/6-Bash%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/</id>
    <published>2020-05-31T20:26:42.000Z</published>
    <updated>2020-06-01T04:29:29.687Z</updated>
    
    <content type="html"><![CDATA[<h3 id="脚本文件格式"><a href="#脚本文件格式" class="headerlink" title="脚本文件格式"></a>脚本文件格式</h3><p>第一行写上<code>#!/bin/bash</code><br>注释信息 <code>#</code><br>代码注释：<br>适当的缩进和空白行；</p><p>语言：编程语法格式，库，算法和数据结构；<br>编程思想：<br>问题空间 –&gt; 解空间</p><p>Bash是典型的弱类型的编程语言<br>数据类型：字符型、整数值<br>弱类型：字符型</p><h3 id="变量："><a href="#变量：" class="headerlink" title="变量："></a>变量：</h3><p>局部变量<br>本地变量<br>环境变量<br>位置参数变量<br>特殊变量</p><h3 id="算数运算"><a href="#算数运算" class="headerlink" title="算数运算"></a>算数运算</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+, -, *, /, %, **</span><br><span class="line"><span class="built_in">let</span> VAR=expression</span><br><span class="line">VAR=$[expression]</span><br><span class="line">VAR=$((expression))</span><br><span class="line">VAR=$(expr argu1 argu2 argu3)</span><br></pre></td></tr></table></figure><p>增强型赋值<br>变量做某种算数运算后回存到此变量中；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> i=<span class="variable">$i</span>+<span class="comment">#</span></span><br><span class="line"><span class="built_in">let</span> i+=<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><code>+=, -=, *=, /=, %=</code></p><h3 id="条件测试："><a href="#条件测试：" class="headerlink" title="条件测试："></a>条件测试：</h3><p>判断某需求是否满足；需要测试机制来实现；</p><ol><li>执行命令，根据命令的返回值来判断；<br>0：成功<br>1-255： 失败</li><li>测试表达式；<br>test expression<br>[ expression ]<br>[[ expression ]]<br>注意： expression两端必须有空白字符，否则为语法错误；</li></ol><h3 id="Bash的测试类型："><a href="#Bash的测试类型：" class="headerlink" title="Bash的测试类型："></a>Bash的测试类型：</h3><ul><li>数值测试</li><li>字符串测试</li><li>文字测试</li></ul><h4 id="数值测试：-数值比较；"><a href="#数值测试：-数值比较；" class="headerlink" title="数值测试： 数值比较；"></a>数值测试： 数值比较；</h4><pre><code>-eq： 是否等于；[ A -eq B ];-ne： 是否不等于；-gt： 是否大于；-ge： 是否大于等于；-lt： 是否小于；-le： 是否小于等于；</code></pre><p>代码中的 [] 执行基本的算数运算，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=5</span><br><span class="line">b=6</span><br><span class="line"></span><br><span class="line">result=$[a+b] <span class="comment"># 注意等号两边不能有空格</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"result 为： <span class="variable">$result</span>"</span></span><br></pre></td></tr></table></figure><h4 id="字符串测试"><a href="#字符串测试" class="headerlink" title="字符串测试:"></a>字符串测试:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">==： 是否等于；</span><br><span class="line">&gt;： 是否大于；</span><br><span class="line">&lt;： 是否小于；</span><br><span class="line">!=：是否不等于；</span><br><span class="line">=~： 左侧字符串是否能被右侧的PATTERN匹配；</span><br><span class="line">-z <span class="string">"STRING"</span>： 判断指定的字符串是否为空；空为真，非空为假。</span><br><span class="line">-n <span class="string">"STRING"</span>： 判断指定的字符串是否非空，非空为真，空为假；</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>字符串要加引用；</li><li>要使用[[ ]];</li></ul><h4 id="文件测试："><a href="#文件测试：" class="headerlink" title="文件测试："></a>文件测试：</h4><ol><li><p>存在测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-a FILE</span><br><span class="line">-e FILE: 如果文件存在则为真</span><br></pre></td></tr></table></figure></li><li><p>存在及类型测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-b 如果文件存在且为块特殊文件则为真</span><br><span class="line">-c 如果文件存在且为字符型特殊文件则为真</span><br><span class="line">-d 如果文件存在且为目录则为真</span><br><span class="line">-f 如果文件存在且为普通文件则为真</span><br><span class="line">-h 链接文件</span><br><span class="line">-p 管道文件</span><br><span class="line">-S 套接字文件</span><br><span class="line">3. 文件权限测试：</span><br><span class="line">-r 存在且可读</span><br><span class="line">-w 存在且可写</span><br><span class="line">-x 存在且可执行</span><br><span class="line">4. 特殊权限测试：</span><br><span class="line">-u 存在且拥有suid</span><br><span class="line">-g 存在且拥有sgid</span><br><span class="line">-k 存在且拥有sticky</span><br></pre></td></tr></table></figure></li><li><p>文件内容测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-s 是否有内容</span><br></pre></td></tr></table></figure></li><li><p>时间戳：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-N FILE ：文件自上一次读操作后是否被修改；</span><br></pre></td></tr></table></figure></li><li><p>从属关系测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-O FILE：当前用户是否为文件的属主；</span><br><span class="line">-G FILE：当前用户是否为文件的属组；</span><br></pre></td></tr></table></figure></li><li><p>双目测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FILE1 -ef FILE2；FILE1与FILE2是否指向同一个文件系统的相同inode的硬链接；</span><br><span class="line">FILE1 -nt FILE2：FILE1是否新于FILE2；</span><br><span class="line">FILE1 -ot FILE2：FILE1是否旧于FILE2；</span><br></pre></td></tr></table></figure></li></ol><h3 id="组合测试条件："><a href="#组合测试条件：" class="headerlink" title="组合测试条件："></a>组合测试条件：</h3><p>逻辑运算：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1. </span><br><span class="line">    COMMAND1 &amp;&amp; COMMAND2</span><br><span class="line">    COMMAND1 || COMMAND2</span><br><span class="line">    !COMMAND</span><br><span class="line">    [ -O FILE ] &amp;&amp; [ -r FILE ]</span><br><span class="line">2. </span><br><span class="line">    EXPRESSION1 -a EXPRESSION2</span><br><span class="line">    EXPRESSION1 -O EXPRESSION2</span><br><span class="line">    !EXPRESSION</span><br><span class="line">    [ -O FILE -a -x FILE ]</span><br></pre></td></tr></table></figure><p>练习：将当前主机名称保存至hostname变量中：<br>主机名如果为空，或者为localhost.localdomain,则将其设置为<a href="http://www.magedu.com" target="_blank" rel="noopener">www.magedu.com</a>;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">hostname=$(hostname)</span><br><span class="line">[ -z <span class="string">"<span class="variable">$hostname</span>"</span> -o <span class="string">"<span class="variable">$hostname</span>"</span>==<span class="string">"localhost.localdomain"</span> -o <span class="string">"<span class="variable">$hostname</span>"</span>==<span class="string">"localhost"</span> ] &amp;&amp; hostname www.magedu.com</span><br></pre></td></tr></table></figure><h3 id="脚本的状态返回值："><a href="#脚本的状态返回值：" class="headerlink" title="脚本的状态返回值："></a>脚本的状态返回值：</h3><p>默认是脚本执行的最后一条命令的返回值；<br>自定义状态退出状态码:<br>exit [n]：n为自己指定的状态码；<br>注意：SHELL进程遇到exit时，即会终止，因此整个脚本执行即为结束。</p><h3 id="向脚本传递参数"><a href="#向脚本传递参数" class="headerlink" title="向脚本传递参数"></a>向脚本传递参数</h3><h4 id="位置参数变量"><a href="#位置参数变量" class="headerlink" title="位置参数变量"></a>位置参数变量</h4><p>myscript.sh<br>引用方式：<br>$1,$2,$3…$10,$11…<br>轮替：<br>shift [n]: 位置参数轮替：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">file1_lines=$(grep <span class="string">"^$"</span> <span class="variable">$1</span> | wc -l)</span><br><span class="line">file2_lines=$(grep <span class="string">"^$"</span> <span class="variable">$2</span> | wc -l)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Total blank lines: $[<span class="variable">$file1_lines</span>+<span class="variable">$file2_lines</span>]"</span></span><br></pre></td></tr></table></figure><h4 id="特殊变量："><a href="#特殊变量：" class="headerlink" title="特殊变量："></a>特殊变量：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$0</span>:脚本文件路径本身;</span><br><span class="line"><span class="variable">$#</span>:脚本参数的个数；</span><br><span class="line">$*:所有参数 （分割为多个字符串）</span><br><span class="line"><span class="variable">$@</span>:所有参数 （合并为一个字符串）</span><br></pre></td></tr></table></figure><p><code>[ $# -lt 2 ] &amp;&amp; echo &quot;At least two files&quot; &amp;&amp; exit 1</code><br>如果参数个数小于2个，提示至少需要2个参数，并退出，状态码1</p><p>过程式编程语言的代码执行顺序：<br>顺序执行： 逐条执行；<br>选择执行：<br>    代码有一个分支： 条件满足时才会执行；<br>    两个或以上的分支：只会执行其中一个满足条件的分支；<br>循环执行：<br>    某代码片段（循环体）要执行0、1或者多个来回；<br>选择执行：<br>单分支的if语句：<br>if 测试条件<br>then<br>    代码分支<br>fi</p><p>双分支的if语句<br>if 测试条件；then<br>    条件为真时执行的分支<br>else<br>    条件为假时执行的分支<br>fi</p><p>示例： 通过参数传递一个用户名给脚本，此用户不存在时，则添加之；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[ <span class="variable">$#</span> -lt 1 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"At least one username."</span> &amp;&amp; <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! grep <span class="string">"^<span class="variable">$1</span>\&gt;"</span> /etc/passwd &amp;&gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">    useradd <span class="variable">$1</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$1</span> | passwd --stdin <span class="variable">$1</span> &amp;&gt; /dev/null</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Add user <span class="variable">$1</span> finished."</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"user <span class="variable">$1</span> exist."</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>练习1： 通过命令行参数给定两个数字，输出其中较大的数值；<br>练习2： 通过命令行参数指定一个用户名，判断其ID号是偶数还是奇数；<br>练习3： 通过命令行参数给定两个文本文件名，如果某文件不存在，则结束脚本执行；<br>        都存在时返回每个文件的行数，并说明其中行数较多的文件；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;脚本文件格式&quot;&gt;&lt;a href=&quot;#脚本文件格式&quot; class=&quot;headerlink&quot; title=&quot;脚本文件格式&quot;&gt;&lt;/a&gt;脚本文件格式&lt;/h3&gt;&lt;p&gt;第一行写上&lt;code&gt;#!/bin/bash&lt;/code&gt;&lt;br&gt;注释信息 &lt;code&gt;#&lt;/code&gt;&lt;b
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>5.btrfs文件系统管理与应用</title>
    <link href="http://yoursite.com/2020/05/31/5-btrfs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2020/05/31/5-btrfs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/</id>
    <published>2020-05-31T20:26:33.000Z</published>
    <updated>2020-06-01T04:29:09.297Z</updated>
    
    <content type="html"><![CDATA[<p>技术预览版。GPL，开源版本 2007 ORACLE Cow；取代linux系统的ext系列文件系统<br><code>B-tree</code><br><code>Butter FS</code><br><code>Better FS</code></p><p><strong>特性</strong><br>多物理卷支持：可由多个底层物理卷组成，支持RAID，已联机添加、移除、修改；<br>写入时复制（cow）：复制、更新、以及替换指针；而非传统的“就地”更新；<br>数据及元数据校验码：checksum：极大的保证了数据的可靠性；<br>子卷：sub_volume；<br>快照：支持快照的快照；<br>透明压缩:节约时间，但是会浪费CPU时钟周期；<br><strong>btrfs</strong><br><strong>mkfs.btrfs</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7 ~]<span class="comment"># mkfs.btrfs </span></span><br><span class="line">btrfs-progs v4.9.1</span><br><span class="line">See http://btrfs.wiki.kernel.org <span class="keyword">for</span> more information.</span><br><span class="line"></span><br><span class="line">Usage: mkfs.btrfs [options] dev [ dev ... ]</span><br><span class="line">Options:</span><br><span class="line">  allocation profiles:</span><br><span class="line">        -d|--data PROFILE       data profile, raid0, raid1, raid5, raid6, raid10, dup or single</span><br><span class="line">        -m|--metadata PROFILE   metadata profile, values like <span class="keyword">for</span> data profile</span><br><span class="line">        -M|--mixed              mix metadata and data together</span><br><span class="line">  features:</span><br><span class="line">        -n|--nodesize SIZE      size of btree nodes</span><br><span class="line">        -s|--sectorsize SIZE    data block size (may not be mountable by current kernel)</span><br><span class="line">        -O|--features LIST      comma separated list of filesystem features (use <span class="string">'-O list-all'</span> to list features)</span><br><span class="line">        -L|--label LABEL        <span class="built_in">set</span> the filesystem label</span><br><span class="line">        -U|--uuid UUID          specify the filesystem UUID (must be unique)</span><br><span class="line">  creation:</span><br><span class="line">        -b|--byte-count SIZE    <span class="built_in">set</span> filesystem size to SIZE (on the first device)</span><br><span class="line">        -r|--rootdir DIR        copy files from DIR to the image root directory</span><br><span class="line">        -K|--nodiscard          <span class="keyword">do</span> not perform whole device TRIM</span><br><span class="line">        -f|--force              force overwrite of existing filesystem</span><br><span class="line">  general:</span><br><span class="line">        -q|--quiet              no messages except errors</span><br><span class="line">        -V|--version            <span class="built_in">print</span> the mkfs.btrfs version and <span class="built_in">exit</span></span><br><span class="line">        --<span class="built_in">help</span>                  <span class="built_in">print</span> this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">  deprecated:</span><br><span class="line">        -A|--alloc-start START  the offset to start the filesystem</span><br><span class="line">        -l|--leafsize SIZE      deprecated, <span class="built_in">alias</span> <span class="keyword">for</span> nodesize</span><br></pre></td></tr></table></figure><p>-L <code>LABEL</code></p><p>-d <type>: raid0, raid1, raid5, raid6, raid10, single, dup</p><p>-O <feature>: raid0, raid1, raid5, raid6, raid10, single, dup</p><p>​    -O list-all: 列出支持的所有feature；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7 ~]<span class="comment"># mkfs.btrfs -O list-all</span></span><br><span class="line">Filesystem features available:</span><br><span class="line">mixed-bg            - mixed data and metadata block groups (0x4, compat=2.6.37, safe=2.6.37)</span><br><span class="line">extref              - increased hardlink <span class="built_in">limit</span> per file to 65536 (0x40, compat=3.7, safe=3.12, default=3.12)</span><br><span class="line">raid56              - raid56 extended format (0x80, compat=3.9)</span><br><span class="line">skinny-metadata     - reduced-size metadata extent refs (0x100, compat=3.10, safe=3.18, default=3.18)</span><br><span class="line">no-holes            - no explicit hole extents <span class="keyword">for</span> files (0x200, compat=3.14, safe=4.0)</span><br></pre></td></tr></table></figure><p><code>mkfs.btrfs -L mydata /dev/sdb /dev/sdc -f</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7 ~]<span class="comment"># mkfs.btrfs -L mydata /dev/sdb /dev/sdc -f</span></span><br><span class="line">btrfs-progs v4.9.1</span><br><span class="line">See http://btrfs.wiki.kernel.org <span class="keyword">for</span> more information.</span><br><span class="line"></span><br><span class="line">Label:              mydata</span><br><span class="line">UUID:               7c9e06ee-52ee-4350-b066-d23e980f6b88</span><br><span class="line">Node size:          16384</span><br><span class="line">Sector size:        4096</span><br><span class="line">Filesystem size:    20.00GiB</span><br><span class="line">Block group profiles:</span><br><span class="line">  Data:             RAID0             2.00GiB</span><br><span class="line">  Metadata:         RAID1             1.00GiB</span><br><span class="line">  System:           RAID1             8.00MiB</span><br><span class="line">SSD detected:       no</span><br><span class="line">Incompat features:  extref, skinny-metadata</span><br><span class="line">Number of devices:  2</span><br><span class="line">Devices:</span><br><span class="line">   ID        SIZE  PATH</span><br><span class="line">    1    10.00GiB  /dev/sdb</span><br><span class="line">    2    10.00GiB  /dev/sdc</span><br></pre></td></tr></table></figure><p>显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7 ~]<span class="comment"># btrfs filesystem show</span></span><br><span class="line">Label: <span class="string">'mydata'</span>  uuid: 7c9e06ee-52ee-4350-b066-d23e980f6b88</span><br><span class="line">        Total devices 2 FS bytes used 112.00KiB</span><br><span class="line">        devid    1 size 10.00GiB used 2.01GiB path /dev/sdb</span><br><span class="line">        devid    2 size 10.00GiB used 2.01GiB path /dev/sdc</span><br></pre></td></tr></table></figure><p>之后就可以挂载使用了</p><p><code>mount -t btrfs /dev/sdc MOUNT_POINT</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7 ~]<span class="comment"># mkdir -pv /mnt/mydata</span></span><br><span class="line">mkdir: created directory ‘/mnt/mydata’</span><br><span class="line">[root@Centos7 ~]<span class="comment"># mount -t btrfs /dev/sd</span></span><br><span class="line">sda   sda1  sda2  sda3  sdb   sdc</span><br></pre></td></tr></table></figure><p>只要使用sdb和sdc效果一样</p><p><code>/dev/sdb on /mydata type btrfs (rw,relatime,seclabel,space_cache,subvolid=5,subvol=/)</code></p><p>卸载umount即可</p><p>透明压缩机制：</p><p><code>mount -o compress={lzo|zlib} DEVICE MOUNT_POINT</code></p><p><code>btrfs resize</code></p><p>增加：</p><p><code>btrfs device add /dev/sd? mount_point</code></p><p>balance均衡操作：</p><p><code>btrfs balance {status|start|pause|cancel|resume}</code></p><p>联机拆除设备，不影响数据，会自动移动文件</p><p><code>btrfs device delete /dev/sd? mount_point</code></p><p>改变raid级别</p><p><code>btrfs balance start -dconvert=raid5 /mydata</code>    数据块的</p><p><code>btrfs balance start -mconvert=raid5 /mydata</code> 元数据的</p><p>子卷：</p><p><code>btrfs subvolume</code></p><p>创建：create</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7 ~]<span class="comment"># btrfs subvolume create /mydata/logs</span></span><br><span class="line">Create subvolume <span class="string">'/mydata/logs'</span></span><br></pre></td></tr></table></figure><p>列出；</p><p>list</p><p><code>btrfs subvolume list /mydata</code></p><p>只挂载子卷：</p><p>先卸载父卷</p><p><code>mount -o subvol=logs /dev/sdb /mydata/</code></p><p>使用子卷ID挂载：</p><p><code>mount -o subvolid=1 /dev/sdb /mydata</code></p><p>子卷删除：</p><p><code>btrfs subvolume delete /mydata/logs</code> </p><p>创建快照：</p><p>子卷的快照必须与子卷在一个父卷中：</p><p><code>btrfs subvolume snapshot /mydata/logs /mydata/log_snapshot</code></p><p>删除:</p><p><code>btrfs subvolume delete /mydata/logs_snapshot/</code></p><p>对一个文件创建快照：</p><p>cp –reflink file file_snapshot</p><p>另一个文件最好在当前卷下某个路径下</p><p>无损转换文件系统：</p><p>ext4转换为btrfs</p><p><code>fsck -f device</code></p><p><code>btrfs-convert device</code></p><p>回滚为ext4</p><p><code>btrfs-convert -r device</code></p><p><code>blkid</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;技术预览版。GPL，开源版本 2007 ORACLE Cow；取代linux系统的ext系列文件系统&lt;br&gt;&lt;code&gt;B-tree&lt;/code&gt;&lt;br&gt;&lt;code&gt;Butter FS&lt;/code&gt;&lt;br&gt;&lt;code&gt;Better FS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;str
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
